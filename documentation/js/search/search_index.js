var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddUserDto.html",[0,0.111,1,1.865]],["body/classes/AddUserDto.html",[0,0.172,1,2.538,2,2.062,3,0.254,4,0.216,5,0.216,6,2.661,7,0.377,8,1.777,9,3.637,10,3.637,11,4.143,12,2.201,13,3.637,14,4.143,15,2.956,16,4.143,17,3.609,18,0.805,19,0.031,20,1.845,21,2.113,22,4.143,23,0.986,24,3.182,25,1.31,26,4.954,27,3.637,28,3.182,29,3.182,30,3.182,31,3.182,32,3.182,33,3.182,34,2.106,35,3.182,36,3.182,37,3.182,38,4.349,39,4.349,40,2.306,41,4.349,42,3.182,43,3.182,44,3.182,45,0.457,46,3.262,47,1.198,48,2.956,49,3.609,50,3.182,51,3.637,52,3.182,53,1.932,54,3.637,55,0.942,56,0.942,57,1.02,58,0.254,59,4.349,60,3.182,61,3.182,62,3.182,63,3.182,64,0.021,65,0.021]],["title/classes/AddVaccineDetailsDto.html",[0,0.111,66,1.865]],["body/classes/AddVaccineDetailsDto.html",[0,0.18,2,2.676,3,0.33,4,0.281,5,0.281,7,0.489,8,2.107,18,0.744,19,0.031,20,1.654,21,1.954,22,3.454,23,0.912,25,1.098,45,0.475,46,3.123,47,1.555,48,2.982,49,3.758,53,1.835,55,1.222,56,1.222,57,1.324,58,0.33,64,0.024,65,0.024,66,3.011,67,3.454,68,4.097,69,4.704,70,3.644,71,2.498,72,5.158,73,4.13,74,4.13,75,4.13]],["title/controllers/AppController.html",[76,1.11,77,2.071]],["body/controllers/AppController.html",[0,0.155,3,0.356,4,0.303,5,0.303,7,0.528,19,0.031,21,1.55,23,0.723,25,1.151,45,0.499,58,0.356,64,0.026,65,0.026,76,1.879,77,3.505,78,1.55,79,3.732,80,1.601,81,5.061,82,4.463,83,1.219,84,0.723,85,3.086,86,3.732,87,2.605,88,2.161,89,1.321,90,4.463]],["title/modules/AppModule.html",[91,1.025,92,2.071]],["body/modules/AppModule.html",[0,0.116,3,0.267,4,0.227,5,0.227,15,1.774,17,2.437,18,0.443,19,0.032,45,0.582,58,0.267,64,0.021,65,0.021,77,3.294,78,1.563,84,0.542,85,3.097,86,2.798,91,1.443,92,4.138,93,1.486,94,1.999,95,2.798,96,2.798,97,2.798,98,3.41,99,3.41,100,3.41,101,3.41,102,2.385,103,1.774,104,1.62,105,3.346,106,2.626,107,2.915,108,3.346,109,1.953,110,1.26,111,1.563,112,3.346,113,1.042,114,3.346,115,3.346,116,1.838,117,3.346,118,1.838,119,3.346,120,3.346,121,1.953,122,3.346,123,3.346,124,1.62,125,3.346,126,3.346,127,3.346,128,3.346,129,3.346,130,3.346,131,3.346,132,3.346,133,3.346,134,3.346,135,3.346,136,3.346,137,1.774,138,3.346,139,2.168]],["title/injectables/AppService.html",[85,1.694,140,0.74]],["body/injectables/AppService.html",[0,0.161,3,0.368,4,0.314,5,0.314,7,0.546,19,0.031,23,0.748,25,1.175,45,0.425,58,0.368,64,0.026,65,0.026,80,1.633,81,5.118,83,1.26,84,0.748,85,2.926,89,1.366,140,1.279,141,2.05,142,3.859,143,4.614,144,4.614,145,4.614]],["title/injectables/JwtTokenService.html",[140,0.74,146,2.071]],["body/injectables/JwtTokenService.html",[0,0.113,3,0.259,4,0.22,5,0.22,7,0.383,18,0.709,19,0.032,23,0.869,40,1.716,45,0.517,58,0.259,64,0.021,65,0.021,80,1.302,83,1.365,84,0.525,89,1.479,113,1.242,140,1.019,141,1.438,146,2.851,147,2.707,148,2.299,149,4.4,150,4.4,151,4.4,152,2.131,153,3.237,154,4.838,155,3.237,156,1.72,157,1.72,158,1.72,159,3.237,160,4.387,161,3.237,162,2.098,163,3.237,164,3.237,165,1.657,166,4.4,167,3.907,168,3.237,169,2.098,170,2.851,171,1.716,172,1.716,173,1.568,174,3.237,175,3.237,176,3.237,177,2.421,178,3.641,179,1.657,180,2.707,181,1.219,182,2.707,183,2.707,184,2.707,185,2.707,186,1.798,187,3.237,188,3.237,189,3.237,190,3.237,191,3.205,192,2.707,193,2.707,194,1.89,195,2.707,196,3.237,197,2.707,198,3.237]],["title/entities/Login.html",[111,1.11,199,1.306]],["body/entities/Login.html",[0,0.13,3,0.204,4,0.174,5,0.174,7,0.302,8,1.521,12,2.28,15,2.721,18,0.765,19,0.032,20,1.193,21,2.008,23,0.937,25,1.281,34,1.802,45,0.445,46,2.559,47,0.961,48,3.065,53,1.134,55,0.756,56,0.756,57,0.818,58,0.204,64,0.018,65,0.018,111,1.677,113,1.379,137,1.353,181,1.932,186,1.043,199,1.972,200,2.135,201,0.543,202,1.401,203,3.325,204,3.325,205,3.325,206,3.325,207,3.325,208,2.711,209,2.553,210,3.97,211,4.132,212,2.553,213,2.412,214,2.553,215,2.846,216,2.553,217,2.412,218,2.711,219,1.654,220,2.553,221,2.553,222,2.412,223,2.553,224,2.553,225,2.135,226,3.113,227,3.113,228,2.135,229,2.553,230,3.722,231,2.711,232,2.711,233,2.412,234,2.412,235,3.722,236,3.113,237,3.113,238,1.043,239,2.135,240,1.973]],["title/controllers/LoginController.html",[76,1.11,241,2.071]],["body/controllers/LoginController.html",[0,0.094,3,0.215,4,0.183,5,0.183,7,0.318,12,2.01,15,2.778,18,0.743,19,0.032,21,1.572,23,0.734,25,1.265,40,2.399,45,0.456,47,1.013,58,0.215,64,0.018,65,0.018,76,0.934,78,0.934,80,1.144,83,1.49,84,0.436,87,1.57,88,1.303,89,1.339,104,2.191,111,1.718,113,1.332,148,2.054,156,1.451,157,1.451,158,1.451,160,4.624,162,2.505,165,1.455,167,4.266,169,1.743,178,2.816,179,1.013,186,1.579,197,2.25,201,0.963,241,2.505,242,2.25,243,1.743,244,3.866,245,2.69,246,3.866,247,2.69,248,3.851,249,3.851,250,2.554,251,3.784,252,2.69,253,3.866,254,2.69,255,3.866,256,3.233,257,2.69,258,3.866,259,2.69,260,3.233,261,3.784,262,1.743,263,1.743,264,2.69,265,3.866,266,1.849,267,2.25,268,1.96,269,2.69,270,2.69,271,2.69,272,2.327,273,2.69,274,2.69,275,3.866,276,2.69,277,2.69,278,2.69,279,2.69,280,1.303]],["title/modules/LoginModule.html",[91,1.025,98,1.865]],["body/modules/LoginModule.html",[0,0.129,3,0.297,4,0.253,5,0.253,19,0.032,45,0.572,55,1.101,56,1.101,57,1.193,58,0.297,64,0.023,65,0.023,78,1.676,84,0.603,91,1.547,93,1.652,94,2.143,98,3.663,102,2.558,103,1.972,104,1.802,106,2.817,107,2.41,109,2.171,110,1.4,111,1.292,113,1.118,171,1.972,172,1.972,241,3.471,266,2.62,267,3.111,281,3.111,282,3.111,283,3.111,284,2.266,285,3.72,286,3.515,287,2.71,288,2.171,289,3.72,290,2.41,291,3.72,292,2.71,293,3.515,294,2.71,295,2.71,296,2.71]],["title/injectables/LoginService.html",[140,0.74,266,1.306]],["body/injectables/LoginService.html",[0,0.059,3,0.136,4,0.116,5,0.116,7,0.201,8,1.115,12,2.026,15,2.266,18,0.697,19,0.032,20,1.536,23,0.807,25,1.215,40,1.446,45,0.459,55,0.504,56,0.504,58,0.136,64,0.013,65,0.013,71,1.321,80,0.807,83,1.497,84,0.276,89,1.559,110,0.641,111,2.117,113,0.905,139,1.103,140,0.632,141,0.756,148,2.212,152,1.321,154,4.006,156,1.536,157,1.536,158,1.536,160,2.845,162,1.768,165,2.125,167,3.627,169,1.103,170,1.768,171,0.902,173,1.653,177,2.411,178,3.322,179,1.874,180,1.424,181,1.803,183,1.424,184,1.424,185,1.424,186,0.695,191,1.988,192,1.424,193,1.424,194,1.993,195,1.424,201,0.971,238,0.695,240,0.902,248,3.657,249,3.74,250,2.434,251,2.282,260,2.282,261,2.282,266,1.115,272,2.281,284,1.803,288,0.994,290,1.103,297,1.424,298,3.113,299,2.728,300,2.282,301,2.282,302,2.728,303,2.728,304,2.728,305,1.702,306,2.279,307,1.702,308,2.282,309,2.728,310,1.702,311,2.845,312,1.321,313,2.728,314,2.282,315,1.702,316,2.282,317,2.728,318,1.702,319,3.905,320,2.845,321,2.728,322,1.702,323,2.728,324,1.702,325,2.728,326,1.702,327,2.728,328,2.728,329,1.768,330,1.988,331,1.24,332,1.702,333,1.424,334,1.103,335,1.424,336,1.702,337,1.702,338,1.702,339,3.905,340,1.891,341,1.702,342,1.424,343,1.702,344,1.424,345,1.702,346,1.424,347,1.702,348,2.728,349,1.702,350,2.728,351,1.702,352,1.702,353,1.702,354,2.282,355,1.103,356,1.103,357,1.424,358,1.702,359,1.702,360,1.702,361,1.424,362,1.768,363,2.728,364,2.282,365,1.702,366,1.702,367,1.702,368,2.728,369,1.702,370,1.702,371,1.702,372,1.702,373,1.424,374,1.702,375,1.702,376,1.702,377,1.702]],["title/guards/RolesGuard.html",[378,2.328,379,2.328]],["body/guards/RolesGuard.html",[0,0.125,3,0.288,4,0.245,5,0.245,7,0.426,18,0.625,19,0.032,23,0.766,34,2.289,45,0.516,58,0.288,64,0.022,65,0.022,80,1.399,83,0.984,84,0.584,88,1.745,89,1.561,113,0.835,140,1.095,146,3.767,152,2.289,156,1.515,157,1.691,158,1.515,165,1.779,173,2.289,177,2.554,186,2.155,340,1.745,362,2.335,379,3.443,380,3.603,381,3.014,382,5.813,383,3.603,384,5.599,385,3.603,386,3.603,387,5.599,388,3.603,389,4.726,390,5.274,391,2.335,392,3.014,393,3.014,394,3.603,395,3.014,396,3.603,397,3.603,398,3.603,399,3.603,400,3.603,401,4.726,402,3.603,403,3.603,404,3.603,405,3.603,406,3.603,407,3.603,408,3.603,409,3.603]],["title/interfaces/SwaggerConfig.html",[410,2.071,411,2.071]],["body/interfaces/SwaggerConfig.html",[3,0.348,4,0.296,5,0.296,7,0.516,8,2.179,18,0.794,19,0.03,25,1.394,58,0.348,64,0.025,65,0.025,201,1.31,410,3.455,411,3.455,412,4.359,413,3.645,414,3.175,415,4.359,416,5.02,417,5.02,418,5.02]],["title/classes/UnauthorizedException.html",[0,0.111,391,2.071]],["body/classes/UnauthorizedException.html",[0,0.203,2,2.375,3,0.293,4,0.249,5,0.249,19,0.032,23,0.594,45,0.441,58,0.467,64,0.023,65,0.023,84,0.775,113,0.849,152,2.956,194,2.139,201,0.78,256,3.065,316,3.997,364,3.065,391,3.652,419,3.065,420,4.779,421,3.097,422,4.779,423,5.994,424,5.105,425,3.665,426,3.065,427,4.779,428,4.779,429,5.636,430,3.065,431,3.665,432,3.065,433,3.665,434,4.779,435,3.665,436,3.665,437,3.065,438,3.665,439,3.665,440,3.665,441,3.665]],["title/entities/User.html",[113,0.74,199,1.306]],["body/entities/User.html",[0,0.099,3,0.142,4,0.121,5,0.121,7,0.211,8,1.157,9,3.657,10,3.657,11,3.657,12,1.943,13,3.657,14,3.657,15,2.833,16,3.657,17,3.186,18,0.784,19,0.032,20,1.623,21,2.042,23,0.961,25,1.261,34,1.942,45,0.429,46,2.891,47,0.671,48,2.891,49,2.921,51,2.368,53,0.792,54,2.368,55,0.838,56,0.838,57,0.908,58,0.142,64,0.013,65,0.013,111,1.894,113,1.173,118,2.228,137,0.945,139,1.156,148,0.671,170,1.835,179,0.671,181,1.646,199,1.638,201,0.38,202,1.066,203,2.834,204,2.834,205,2.834,206,2.834,207,2.834,208,2.063,210,4.051,211,4.172,213,2.598,215,2.282,217,1.835,219,1.156,222,2.282,225,1.492,233,2.598,234,2.598,237,3.353,238,0.729,240,1.867,442,1.492,443,3.521,444,3.521,445,1.783,446,1.783,447,1.783,448,1.783,449,1.783,450,1.783,451,1.783,452,1.783,453,1.783,454,2.831,455,1.783,456,1.783,457,1.783,458,2.831,459,1.783,460,2.921,461,1.783,462,1.783,463,1.783,464,1.783,465,1.783,466,1.783,467,1.492,468,2.831,469,1.783,470,3.353,471,2.831,472,1.783,473,1.492,474,1.783,475,1.783,476,1.783,477,1.783,478,1.783,479,1.783,480,1.783,481,1.783]],["title/controllers/UserController.html",[76,1.11,482,2.071]],["body/controllers/UserController.html",[0,0.092,1,3.664,3,0.211,4,0.18,5,0.18,7,0.313,18,0.689,19,0.032,20,1.899,21,1.705,23,0.796,40,2.026,45,0.48,47,0.997,55,0.784,56,0.784,57,0.849,58,0.211,64,0.018,65,0.018,76,1.558,78,0.92,80,1.131,83,1.563,84,0.429,87,1.545,88,1.282,89,1.453,113,1.428,156,1.438,157,1.438,158,1.438,165,2.156,172,1.404,181,2.23,201,1.045,202,1.439,243,1.716,248,2.476,249,2.476,250,2.181,262,2.476,263,2.906,268,1.929,272,2.313,280,1.851,284,1.688,311,2.784,312,1.851,329,2.476,330,2.784,482,2.476,483,2.214,484,3.196,485,4.106,486,2.476,487,3.75,488,2.214,489,2.648,490,2.627,491,2.476,492,3.822,493,2.648,494,3.196,495,2.231,496,1.716,497,3.822,498,2.648,499,2.214,500,3.822,501,2.648,502,3.196,503,2.476,504,2.214,505,2.214,506,2.214,507,2.214,508,2.648,509,2.648,510,2.648,511,2.648,512,2.648,513,2.648,514,2.648,515,2.214,516,2.648]],["title/modules/UserModule.html",[91,1.025,99,1.865]],["body/modules/UserModule.html",[0,0.131,3,0.3,4,0.255,5,0.255,19,0.032,45,0.574,58,0.3,64,0.023,65,0.023,78,1.687,84,0.609,91,1.557,93,1.669,94,2.157,99,3.67,102,2.575,103,1.992,104,1.82,106,2.835,107,2.435,109,2.193,110,1.415,111,1.687,113,0.87,171,1.992,172,1.992,266,2.465,284,2.418,286,3.538,287,2.737,288,2.193,292,2.737,293,3.538,294,2.737,295,2.737,296,2.737,482,3.487,507,3.142,517,3.142,518,3.757,519,3.142,520,3.757,521,2.737,522,3.757,523,3.757]],["title/injectables/UserService.html",[140,0.74,284,1.203]],["body/injectables/UserService.html",[0,0.059,1,3.403,3,0.136,4,0.116,5,0.116,7,0.202,12,1.52,18,0.659,19,0.032,20,1.786,23,0.778,25,0.728,40,1.45,45,0.442,58,0.136,64,0.013,65,0.013,71,2.212,80,0.81,83,1.44,84,0.277,88,0.827,89,1.352,110,0.643,111,1.487,113,1.391,139,1.107,140,0.634,141,0.759,148,2.23,152,1.325,156,1.464,157,1.464,158,1.464,165,2.098,172,0.906,173,1.895,177,2.609,179,2.028,181,1.985,182,1.429,186,1.398,194,0.997,201,0.833,202,1.03,226,1.429,238,0.698,248,1.773,249,1.773,250,1.738,266,2.201,272,1.738,280,1.657,284,1.03,288,0.997,298,1.993,300,2.288,301,2.288,306,2.8,308,2.862,311,1.993,312,1.325,314,2.288,329,2.217,330,1.993,334,1.107,335,1.429,340,2.212,342,1.429,344,1.429,346,1.429,354,1.429,355,2.96,356,2.535,357,1.429,421,1.773,484,2.288,485,3.272,486,1.773,487,2.288,488,2.862,490,2.212,491,1.773,494,2.288,495,1.597,496,1.773,499,2.288,502,2.288,503,2.217,506,1.429,521,1.244,524,1.429,525,2.736,526,1.708,527,1.708,528,2.736,529,1.708,530,1.708,531,2.736,532,1.708,533,1.708,534,1.708,535,1.708,536,1.708,537,1.708,538,1.708,539,2.736,540,2.736,541,2.736,542,2.736,543,2.736,544,2.736,545,2.736,546,2.736,547,3.422,548,2.736,549,2.736,550,2.736,551,2.736,552,3.422,553,3.422,554,2.736,555,2.736,556,2.736,557,2.736,558,2.736,559,2.736,560,2.736,561,2.736,562,2.736,563,1.708,564,1.708,565,1.708,566,1.708,567,1.708,568,1.708,569,1.708,570,1.708,571,1.708,572,1.708,573,2.736,574,1.708,575,1.708,576,1.708,577,1.708,578,2.736,579,1.708,580,1.708,581,1.708,582,1.708,583,1.708,584,2.862,585,1.708,586,2.736,587,1.708,588,1.708,589,1.708,590,1.708,591,1.708,592,1.708,593,1.708]],["title/entities/VaccineDetails.html",[118,1.306,199,1.306]],["body/entities/VaccineDetails.html",[0,0.115,3,0.175,4,0.149,5,0.149,7,0.259,8,1.355,18,0.771,19,0.032,20,1.434,21,2.024,23,0.945,25,1.24,34,1.607,45,0.443,46,2.683,47,0.823,48,3.047,53,0.972,55,0.647,56,0.647,57,0.701,58,0.175,64,0.016,65,0.016,68,2.92,69,4.022,70,3.116,71,1.607,113,1.332,116,2.348,118,2.213,137,1.16,181,1.81,186,1.355,199,1.828,201,0.465,202,1.249,203,3.116,204,3.116,205,3.116,206,3.116,207,3.116,208,2.417,210,3.976,211,4.133,213,2.899,215,2.597,217,2.15,218,2.417,219,1.417,222,2.15,227,3.741,228,2.775,231,3.259,232,3.259,233,2.899,234,2.899,236,3.352,238,0.894,239,1.829,240,1.759,460,3.259,594,1.829,595,4.809,596,2.187,597,2.187,598,2.187,599,3.318,600,2.187,601,2.187,602,2.187,603,2.187,604,2.187,605,2.187,606,3.318,607,3.318,608,2.187,609,2.187,610,3.318,611,2.187,612,4.008,613,2.187]],["title/controllers/VaccineDetailsController.html",[76,1.11,614,2.071]],["body/controllers/VaccineDetailsController.html",[0,0.092,3,0.212,4,0.181,5,0.181,7,0.314,12,2.487,18,0.741,19,0.032,20,1.441,21,1.708,23,0.797,25,1.192,45,0.481,47,1,55,0.786,56,0.786,57,0.852,58,0.212,64,0.018,65,0.018,66,3.268,71,2.937,76,0.923,78,0.923,80,1.134,83,1.529,84,0.431,87,1.551,88,1.287,89,1.456,118,2.422,121,3.043,148,2.198,156,1.441,157,1.441,158,1.441,165,2.158,179,1.442,181,1.442,201,0.956,202,1.442,243,1.722,262,2.483,263,1.722,268,1.936,272,2.185,280,1.856,312,1.856,320,2.791,421,2.483,486,2.483,490,2.631,491,2.483,495,2.236,496,1.722,504,2.222,505,2.222,515,2.222,614,3.187,615,3.379,616,2.222,617,4.113,618,3.758,619,2.657,620,3.831,621,2.657,622,2.657,623,3.204,624,3.273,625,2.222,626,3.831,627,2.657,628,3.204,629,3.831,630,2.657,631,2.222,632,1.936,633,2.382,634,2.222,635,2.657,636,2.657,637,2.657,638,2.657,639,2.657,640,2.657,641,2.657,642,2.657]],["title/modules/VaccineDetailsModule.html",[91,1.025,100,1.865]],["body/modules/VaccineDetailsModule.html",[0,0.121,3,0.277,4,0.236,5,0.236,19,0.032,45,0.585,55,1.027,56,1.027,57,1.113,58,0.277,64,0.022,65,0.022,78,1.601,84,0.563,91,1.478,93,1.541,94,2.048,100,3.705,102,2.444,103,1.84,104,1.68,106,2.691,107,2.248,109,2.025,110,1.306,111,1.205,113,1.068,116,1.418,118,1.418,121,2.025,124,1.68,171,1.84,172,1.84,266,2.346,284,2.162,287,2.528,288,2.025,290,2.248,292,2.528,293,3.358,294,2.528,295,2.528,296,2.528,521,2.528,614,3.355,615,2.248,624,3.358,632,2.528,633,3.044,634,2.902,643,2.902,644,2.902,645,2.551,646,3.47,647,2.248,648,2.248,649,2.248,650,3.47,651,3.47,652,3.47,653,3.47]],["title/injectables/VaccineDetailsService.html",[140,0.74,633,1.694]],["body/injectables/VaccineDetailsService.html",[0,0.073,3,0.168,4,0.143,5,0.143,7,0.249,12,2.213,18,0.708,19,0.032,20,1.032,23,0.766,25,1.104,45,0.506,58,0.168,64,0.015,65,0.015,66,2.558,68,1.531,71,2.862,80,0.952,83,1.416,84,0.522,89,1.297,110,0.791,118,2.186,121,2.908,124,1.018,140,0.745,141,0.933,148,2.174,152,1.558,156,1.405,157,1.405,158,1.405,165,1.953,173,1.894,177,2.512,179,1.876,181,0.791,186,0.859,201,0.832,202,1.211,238,0.859,272,1.737,280,2.122,284,1.953,290,1.362,298,4.077,306,2.558,312,1.894,320,2.344,329,1.362,334,1.362,340,2.413,355,1.362,356,1.362,361,1.757,362,2.839,421,2.085,424,1.757,426,1.757,430,2.691,437,3.27,486,2.085,490,2.413,491,2.085,495,1.878,496,1.362,584,1.757,615,3.229,617,3.665,618,2.691,623,2.691,624,2.849,625,2.691,628,2.691,631,1.757,632,1.531,633,2.323,645,2.304,648,1.362,649,1.362,654,1.757,655,3.218,656,2.101,657,2.101,658,3.218,659,3.218,660,2.101,661,2.101,662,2.101,663,2.101,664,2.101,665,2.101,666,2.101,667,3.91,668,2.101,669,2.101,670,2.101,671,2.101,672,2.101,673,2.101,674,2.101,675,3.91,676,2.101,677,1.757,678,3.218,679,2.101,680,3.218,681,3.218,682,3.218,683,3.218,684,2.101,685,2.101,686,2.101,687,2.101,688,2.101,689,2.101,690,3.218,691,2.101,692,2.101,693,3.218,694,2.101,695,2.101,696,2.101,697,2.101]],["title/entities/VaccineType.html",[116,1.306,199,1.306]],["body/entities/VaccineType.html",[0,0.135,3,0.216,4,0.184,5,0.184,7,0.32,8,1.584,18,0.761,19,0.032,20,1.243,21,1.999,23,0.933,25,1.266,34,1.877,45,0.457,46,2.404,47,1.017,48,2.055,53,1.199,55,0.799,56,0.799,57,0.866,58,0.216,64,0.018,65,0.018,70,3.4,116,2.231,118,2.46,137,1.431,181,1.975,199,2.024,201,0.575,202,1.459,203,3.4,204,3.4,205,3.4,206,3.4,207,3.4,210,3.942,211,4.145,213,1.75,215,2.938,217,2.512,218,2.824,219,1.75,222,2.512,231,2.824,232,2.824,233,2.512,234,2.512,238,1.103,240,2.055,460,2.824,467,2.258,470,3.242,473,2.258,698,2.258,699,2.7,700,2.7,701,2.7,702,2.7,703,2.7,704,2.7,705,3.876,706,2.7,707,2.7]],["title/controllers/VaccineTypeController.html",[76,1.11,708,2.071]],["body/controllers/VaccineTypeController.html",[0,0.124,3,0.285,4,0.243,5,0.243,7,0.422,18,0.472,19,0.032,21,1.24,23,0.579,25,1,45,0.484,55,1.056,56,1.056,57,1.144,58,0.285,64,0.022,65,0.022,71,2.275,76,1.24,78,1.24,80,1.39,83,1.283,84,0.579,87,2.083,88,1.729,89,1.056,116,2.515,124,2.275,148,1.976,156,1.144,157,1.144,158,1.144,165,1.344,177,1.729,179,1.344,186,1.458,201,1,202,1.768,243,2.313,250,2.086,262,2.313,263,3.402,272,1.585,280,2.275,312,2.275,340,1.729,355,2.313,356,2.313,490,2.275,503,3.043,645,2.332,647,2.313,648,2.313,649,2.313,708,3.614,709,3.043,710,2.985,711,3.928,712,2.985,713,3.569,714,3.569,715,3.569,716,3.569,717,3.569,718,3.569,719,3.569,720,3.569,721,3.569,722,3.569]],["title/modules/VaccineTypeModule.html",[91,1.025,101,1.865]],["body/modules/VaccineTypeModule.html",[0,0.141,3,0.323,4,0.275,5,0.275,19,0.031,45,0.555,55,1.196,56,1.196,57,1.296,58,0.323,64,0.024,65,0.024,78,1.767,84,0.655,91,1.631,93,1.795,94,2.26,101,3.644,102,2.697,103,2.142,104,1.957,106,2.97,109,2.359,110,1.521,116,1.651,124,1.957,286,2.944,645,2.868,647,2.619,648,3.297,649,2.619,708,3.608,709,2.619,723,3.38,724,4.041,725,3.38,726,4.041,727,4.041,728,4.041,729,4.041]],["title/injectables/VaccineTypeService.html",[140,0.74,645,1.419]],["body/injectables/VaccineTypeService.html",[0,0.12,3,0.275,4,0.234,5,0.234,7,0.407,18,0.682,19,0.032,23,0.835,25,1.17,45,0.507,58,0.275,64,0.022,65,0.022,70,2.228,80,1.356,83,1.407,84,0.557,89,1.356,110,1.294,116,2.455,124,2.662,140,1.061,141,1.527,148,2.217,152,2.219,156,1.652,157,1.652,158,1.652,165,1.725,173,1.665,179,1.725,201,0.975,202,1.725,238,1.405,250,2.035,272,1.527,280,2.496,306,3.208,312,2.496,334,2.228,490,2.219,503,2.969,645,2.441,647,2.228,709,3.561,711,3.832,712,2.875,730,2.875,731,4.582,732,3.438,733,3.438,734,4.582,735,3.438,736,3.438,737,3.438,738,3.438,739,3.438,740,3.438,741,3.438,742,3.438,743,3.438]],["title/injectables/ValidationPipe.html",[140,0.74,744,2.328]],["body/injectables/ValidationPipe.html",[0,0.183,3,0.287,4,0.244,5,0.244,7,0.425,18,0.624,19,0.032,20,1.153,23,0.765,25,0.765,34,2.551,45,0.486,53,1.597,58,0.287,64,0.022,65,0.022,80,1.397,83,1.289,84,0.583,89,1.559,140,1.093,141,1.597,148,1.983,156,1.513,157,1.513,158,1.513,162,2.329,173,2.551,177,2.551,179,1.353,250,2.096,331,4.075,333,3.006,340,1.741,362,2.329,395,3.006,744,3.438,745,3.006,746,4.719,747,4.719,748,4.719,749,4.678,750,3.595,751,5.268,752,4.719,753,3.595,754,5.594,755,3.595,756,4.719,757,3.595,758,3.595,759,3.006,760,3.595,761,3.595,762,3.595,763,3.595,764,3.595,765,3.006,766,3.595,767,3.595,768,3.595,769,3.595,770,3.595]],["title/coverage.html",[771,3.177]],["body/coverage.html",[0,0.175,1,1.914,5,0.223,6,2.743,18,0.434,19,0.031,27,2.743,64,0.021,65,0.021,66,1.914,67,2.743,76,1.957,77,2.125,79,2.743,85,1.739,91,1.052,111,1.139,113,0.76,116,1.34,118,1.34,121,2.591,124,2.15,140,1.376,142,2.743,146,2.125,147,2.743,199,2.203,200,2.743,241,2.125,242,2.743,266,1.34,284,1.235,297,2.743,340,1.588,378,2.389,379,2.389,381,2.743,391,2.125,410,2.125,411,2.125,413,2.743,419,2.743,442,2.743,482,2.125,483,2.743,495,1.914,524,2.743,594,2.743,614,2.125,615,2.876,616,2.743,633,1.739,645,1.457,654,2.743,698,2.743,708,2.125,709,2.876,710,2.743,730,2.743,744,2.389,745,2.743,749,3.713,765,5.263,771,2.389,772,3.28,773,3.28,774,3.28,775,4.439,776,4.439,777,4.439,778,4.439,779,3.28,780,2.743,781,4.439,782,2.743,783,5.634,784,5.634,785,5.032,786,5.032,787,2.743,788,2.743,789,5.032,790,3.28,791,4.439,792,3.234,793,2.743,794,3.28,795,3.28,796,3.28,797,3.28,798,3.28,799,3.28,800,3.28]],["title/dependencies.html",[94,1.707,801,2.669]],["body/dependencies.html",[0,0.184,19,0.032,47,1.618,53,1.908,64,0.025,65,0.025,84,0.696,94,1.908,110,1.618,169,3.425,170,2.784,171,2.278,191,3.13,238,1.755,392,3.593,393,3.593,414,3.13,759,3.593,802,5.973,803,4.296,804,4.296,805,4.296,806,4.296,807,4.296,808,4.296,809,4.296,810,4.296,811,4.296,812,4.296,813,4.296,814,4.296,815,4.296,816,4.296,817,4.296,818,4.296,819,4.296,820,4.296,821,4.296,822,4.296,823,4.296]],["title/miscellaneous/functions.html",[824,1.729,825,3.214]],["body/miscellaneous/functions.html",[7,0.553,18,0.736,19,0.029,64,0.026,65,0.026,83,1.276,156,1.498,157,1.498,158,1.498,194,2.727,201,0.994,250,2.075,490,2.263,787,3.907,788,4.65,792,3.403,793,4.965,824,3.027,825,3.907,826,3.907,827,4.672,828,4.672,829,5.937,830,3.403,831,5.56]],["title/index.html",[7,0.316,832,2.669,833,2.669]],["body/index.html",[4,0.267,19,0.031,64,0.024,65,0.024,201,0.835,306,2.291,373,3.282,432,3.282,771,2.859,830,2.859,834,3.925,835,3.925,836,4.994,837,3.925,838,3.925,839,3.925,840,3.925,841,3.925,842,3.925,843,5.494,844,3.925,845,3.925,846,6.202,847,3.925,848,3.925,849,6.104,850,3.925,851,3.925,852,4.994,853,3.925,854,3.925,855,3.925,856,3.925,857,4.994,858,4.994,859,3.925,860,3.925,861,3.925,862,4.994,863,4.994,864,3.925,865,3.925,866,3.925,867,3.925,868,3.925,869,3.282,870,3.925,871,3.925,872,3.925,873,3.925,874,3.925,875,3.925,876,3.925,877,3.925,878,3.925,879,3.925,880,3.925,881,3.925,882,3.925,883,3.925,884,3.925,885,3.925,886,3.925]],["title/modules.html",[93,1.937]],["body/modules.html",[19,0.027,64,0.027,65,0.027,92,3.075,93,2.108,98,2.77,99,2.77,100,2.77,101,2.77,869,5.271,887,6.303,888,6.303,889,6.303]],["title/overview.html",[890,3.647]],["body/overview.html",[2,2.329,19,0.031,64,0.022,65,0.022,78,1.249,85,2.793,92,4.135,93,1.597,94,2.096,95,3.006,96,3.006,97,3.006,98,3.598,99,3.598,100,3.701,101,3.48,102,2.502,103,1.906,104,1.741,137,1.906,141,1.597,266,2.548,281,3.006,282,3.006,283,3.006,284,2.348,378,2.619,410,2.329,517,3.006,519,3.006,633,2.793,643,3.006,644,3.006,645,2.738,677,3.947,723,3.006,725,3.006,890,3.006,891,4.719,892,3.595,893,3.595,894,3.595]],["title/miscellaneous/variables.html",[824,1.729,895,3.214]],["body/miscellaneous/variables.html",[7,0.539,8,1.862,18,0.725,19,0.031,64,0.026,65,0.026,91,1.757,201,0.97,240,2.416,331,3.32,411,2.953,414,3.32,416,3.812,417,3.812,418,3.812,780,3.812,782,4.582,792,3.32,824,2.953,826,3.812,830,3.32,895,3.812,896,4.558,897,4.558,898,5.874,899,5.479,900,4.558,901,4.558,902,4.558]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":765,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":677,"title":{},"body":{"injectables/VaccineDetailsService.html":{},"overview.html":{}}}],["1.0",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.4.6",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":481,"title":{},"body":{"entities/User.html":{}}}],["100",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":27,"title":{},"body":{"classes/AddUserDto.html":{},"coverage.html":{}}}],["16)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":37,"title":{},"body":{"classes/AddUserDto.html":{}}}],["1d",{"_index":296,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["2",{"_index":684,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["2.3.3",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":894,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":892,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":891,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":893,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["aadharno",{"_index":9,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["accepts",{"_index":490,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"miscellaneous/functions.html":{}}}],["added",{"_index":312,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["addlogindetails",{"_index":299,"title":{},"body":{"injectables/LoginService.html":{}}}],["addlogindetails(login",{"_index":309,"title":{},"body":{"injectables/LoginService.html":{}}}],["address",{"_index":10,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["adduserdetails",{"_index":484,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduserdetails(@body",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["adduserdetails(adduserdto",{"_index":488,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduserdto",{"_index":1,"title":{"classes/AddUserDto.html":{}},"body":{"classes/AddUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["adduserdto.aadharno",{"_index":541,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.address",{"_index":543,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.age",{"_index":545,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.emailid",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.gender",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.infected",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.password",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.phonenum",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserdto.username",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["addvaccinedetails",{"_index":655,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["addvaccinedetails(vaccinedetails",{"_index":659,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["addvaccinedetailsdto",{"_index":66,"title":{"classes/AddVaccineDetailsDto.html":{}},"body":{"classes/AddVaccineDetailsDto.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"coverage.html":{}}}],["addvaccinedetailsdto(vaccinedetails",{"_index":619,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["addvaccinetype",{"_index":711,"title":{},"body":{"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["addvaccinetype(@body",{"_index":715,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["addvaccinetype(vaccinetype",{"_index":712,"title":{},"body":{"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["addvaccinetype(vaccinetype:vaccinetype):promise",{"_index":739,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["admin",{"_index":409,"title":{},"body":{"guards/RolesGuard.html":{}}}],["age",{"_index":11,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["amazing",{"_index":870,"title":{},"body":{"index.html":{}}}],["any):promise",{"_index":176,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["apibearerauth",{"_index":270,"title":{},"body":{"controllers/LoginController.html":{}}}],["apiproperty",{"_index":46,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["apiproperty()@isboolean",{"_index":35,"title":{},"body":{"classes/AddUserDto.html":{}}}],["apiproperty()@isemail",{"_index":30,"title":{},"body":{"classes/AddUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":22,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{}}}],["apiproperty()@isstring",{"_index":72,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{}}}],["apiproperty()@isstring()@length(1",{"_index":32,"title":{},"body":{"classes/AddUserDto.html":{}}}],["apiproperty()@isstring()@length(8",{"_index":26,"title":{},"body":{"classes/AddUserDto.html":{}}}],["apitags",{"_index":268,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{}}}],["apitags('login",{"_index":271,"title":{},"body":{"controllers/LoginController.html":{}}}],["apitags('user",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('vaccinedetails",{"_index":636,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["app",{"_index":830,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":77,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":842,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":92,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":85,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":754,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["array",{"_index":769,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":148,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["authenticationexception",{"_index":439,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["author",{"_index":879,"title":{},"body":{"index.html":{}}}],["authorised",{"_index":406,"title":{},"body":{"guards/RolesGuard.html":{}}}],["auto",{"_index":217,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["await",{"_index":179,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":871,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":333,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('invalid",{"_index":363,"title":{},"body":{"injectables/LoginService.html":{}}}],["badrequestexception('validation",{"_index":766,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["based",{"_index":320,"title":{},"body":{"injectables/LoginService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["bcrypt",{"_index":170,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":365,"title":{},"body":{"injectables/LoginService.html":{}}}],["bcrypt.hash(this.password",{"_index":480,"title":{},"body":{"entities/User.html":{}}}],["bcrypted",{"_index":474,"title":{},"body":{"entities/User.html":{}}}],["beforeinsert",{"_index":471,"title":{},"body":{"entities/User.html":{}}}],["between",{"_index":234,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["body",{"_index":262,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{}}}],["body('emailid",{"_index":273,"title":{},"body":{"controllers/LoginController.html":{}}}],["body('password",{"_index":274,"title":{},"body":{"controllers/LoginController.html":{}}}],["boolean",{"_index":34,"title":{},"body":{"classes/AddUserDto.html":{},"entities/Login.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":889,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":887,"title":{},"body":{"modules.html":{}}}],["building",{"_index":837,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":382,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":386,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cascade",{"_index":227,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{}}}],["chelli1",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":0,"title":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"classes/UnauthorizedException.html":{}},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"classes/UnauthorizedException.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":281,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_exports",{"_index":282,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_providers",{"_index":283,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":517,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":519,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":518,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_vaccinedetailsmodule",{"_index":643,"title":{},"body":{"modules/VaccineDetailsModule.html":{},"overview.html":{}}}],["cluster_vaccinedetailsmodule_providers",{"_index":644,"title":{},"body":{"modules/VaccineDetailsModule.html":{},"overview.html":{}}}],["cluster_vaccinetypemodule",{"_index":723,"title":{},"body":{"modules/VaccineTypeModule.html":{},"overview.html":{}}}],["cluster_vaccinetypemodule_exports",{"_index":725,"title":{},"body":{"modules/VaccineTypeModule.html":{},"overview.html":{}}}],["cluster_vaccinetypemodule_providers",{"_index":724,"title":{},"body":{"modules/VaccineTypeModule.html":{}}}],["column",{"_index":211,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["column()@apiproperty",{"_index":219,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["column()@isemail()@apiproperty",{"_index":450,"title":{},"body":{"entities/User.html":{}}}],["column()@isnumber()@apiproperty",{"_index":444,"title":{},"body":{"entities/User.html":{}}}],["column()@isstring",{"_index":208,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{}}}],["column()@isstring()@apiproperty",{"_index":213,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["column({default",{"_index":222,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["condition",{"_index":319,"title":{},"body":{"injectables/LoginService.html":{}}}],["confifg",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":415,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["console.log",{"_index":183,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["console.log(\"cookie",{"_index":193,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["console.log(\"data",{"_index":367,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log(\"enterd",{"_index":478,"title":{},"body":{"entities/User.html":{}}}],["console.log(\"from",{"_index":690,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["console.log(\"into",{"_index":189,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["console.log('login",{"_index":359,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log(roles",{"_index":403,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log(userresult",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":177,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":152,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{}}}],["constructor(jwtservice",{"_index":153,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["constructor(loginrepository",{"_index":305,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{}}}],["constructor(reflector",{"_index":383,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(userrepository",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(vaccinedetailsrepository",{"_index":656,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["constructor(vaccinetyperepository",{"_index":732,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["context",{"_index":389,"title":{},"body":{"guards/RolesGuard.html":{}}}],["continue",{"_index":433,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["controller",{"_index":76,"title":{"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{}},"body":{"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{},"coverage.html":{}}}],["controller('login",{"_index":269,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('user",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('vaccinedetails",{"_index":635,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["controller('vaccinetype",{"_index":714,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["controllers",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"overview.html":{}}}],["cookie",{"_index":191,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"dependencies.html":{}}}],["coverage",{"_index":771,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covidapp",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["create,delete,verify",{"_index":174,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["createdat",{"_index":203,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["createdocument",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtime",{"_index":204,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["credentials",{"_index":364,"title":{},"body":{"injectables/LoginService.html":{},"classes/UnauthorizedException.html":{}}}],["current",{"_index":260,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["data",{"_index":194,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"classes/UnauthorizedException.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["data).createdat",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["data).createtime",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["data.controller",{"_index":650,"title":{},"body":{"modules/VaccineDetailsModule.html":{}}}],["data.controller.ts",{"_index":616,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"coverage.html":{}}}],["data.controller.ts:24",{"_index":621,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["data.controller.ts:39",{"_index":622,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["data.controller.ts:51",{"_index":627,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["data.controller.ts:58",{"_index":630,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["data.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["data.module.ts",{"_index":646,"title":{},"body":{"modules/VaccineDetailsModule.html":{}}}],["data.service",{"_index":634,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{}}}],["data.service.ts",{"_index":654,"title":{},"body":{"injectables/VaccineDetailsService.html":{},"coverage.html":{}}}],["data.service.ts:102",{"_index":663,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["data.service.ts:17",{"_index":657,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["data.service.ts:30",{"_index":660,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["data.service.ts:74",{"_index":661,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["data.service.ts:90",{"_index":662,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["data/vaccination",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"coverage.html":{}}}],["data['id",{"_index":370,"title":{},"body":{"injectables/LoginService.html":{}}}],["database",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["datanotfoundexception",{"_index":437,"title":{},"body":{"classes/UnauthorizedException.html":{},"injectables/VaccineDetailsService.html":{}}}],["date",{"_index":71,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{}}}],["date.getdate().tostring",{"_index":349,"title":{},"body":{"injectables/LoginService.html":{}}}],["date.gettime().tostring",{"_index":351,"title":{},"body":{"injectables/LoginService.html":{}}}],["date.tolocaledatestring",{"_index":356,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{}}}],["date.tolocaletimestring",{"_index":355,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{}}}],["default",{"_index":240,"title":{},"body":{"entities/Login.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":504,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{}}}],["delete('/:id",{"_index":629,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["delete('deleteuser/:id",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted",{"_index":329,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{}}}],["deletetoken",{"_index":149,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["deletetoken(response",{"_index":159,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["deletetoken(response:response",{"_index":196,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["dependencies",{"_index":94,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":201,"title":{},"body":{"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":503,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["development",{"_index":848,"title":{},"body":{"index.html":{}}}],["disable",{"_index":56,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{}}}],["documentation",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":685,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["dosdate",{"_index":599,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["dosedate",{"_index":68,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{},"entities/VaccineDetails.html":{},"injectables/VaccineDetailsService.html":{}}}],["e2e",{"_index":859,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":838,"title":{},"body":{"index.html":{}}}],["emailid",{"_index":12,"title":{},"body":{"classes/AddUserDto.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["entities",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"overview.html":{}}}],["entity",{"_index":199,"title":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"coverage.html":{}}}],["entity/typeorm/login.enetiy",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["entity/typeorm/user.emtity",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["entity/typeorm/vaccinationdata.entity",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["entity/typeorm/vaccinetype.emtity",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":441,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["errors",{"_index":762,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":764,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eslint",{"_index":55,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{}}}],["eslint/no",{"_index":374,"title":{},"body":{"injectables/LoginService.html":{}}}],["established",{"_index":230,"title":{},"body":{"entities/Login.html":{}}}],["establishes",{"_index":460,"title":{},"body":{"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["exception",{"_index":422,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["executioncontext",{"_index":387,"title":{},"body":{"guards/RolesGuard.html":{}}}],["expiresin",{"_index":295,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["export",{"_index":58,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":286,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineTypeModule.html":{}}}],["exports:[vaccinetypeservice",{"_index":729,"title":{},"body":{"modules/VaccineTypeModule.html":{}}}],["express",{"_index":169,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"dependencies.html":{}}}],["extends",{"_index":423,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["failed",{"_index":767,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["false})@isboolean()@apiproperty",{"_index":455,"title":{},"body":{"entities/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["forwardref",{"_index":536,"title":{},"body":{"injectables/UserService.html":{}}}],["found",{"_index":316,"title":{},"body":{"injectables/LoginService.html":{},"classes/UnauthorizedException.html":{}}}],["framework",{"_index":836,"title":{},"body":{"index.html":{}}}],["function",{"_index":749,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["functions",{"_index":825,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":13,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["generates",{"_index":210,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["generatetoken",{"_index":150,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["generatetoken(user",{"_index":163,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["generatetoken(user:user",{"_index":175,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["get('/getallusers",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/getondate/:date",{"_index":626,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["get('/getuser",{"_index":258,"title":{},"body":{"controllers/LoginController.html":{}}}],["getbyemailid",{"_index":300,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["getbyemailid(emailid",{"_index":314,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["getbyid",{"_index":301,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["getbyid(condition",{"_index":317,"title":{},"body":{"injectables/LoginService.html":{}}}],["getbyid(id",{"_index":531,"title":{},"body":{"injectables/UserService.html":{}}}],["gethello",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlogggedinuser",{"_index":302,"title":{},"body":{"injectables/LoginService.html":{}}}],["getlogggedinuser(request",{"_index":321,"title":{},"body":{"injectables/LoginService.html":{}}}],["gets",{"_index":311,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getting",{"_index":832,"title":{"index.html":{}},"body":{}}],["getuserdetails",{"_index":485,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getvaccinedata",{"_index":617,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["getvaccinedataondate",{"_index":618,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["getvaccinedataondate(date",{"_index":625,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["getvaccinetype",{"_index":731,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["getvaccinetype(vaccinename",{"_index":736,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["getvaccinetype(vaccinename:string):promise",{"_index":741,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["grow",{"_index":866,"title":{},"body":{"index.html":{}}}],["guard",{"_index":378,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":380,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hashed",{"_index":476,"title":{},"body":{"entities/User.html":{}}}],["hello",{"_index":144,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":876,"title":{},"body":{"index.html":{}}}],["host",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["httpexception",{"_index":424,"title":{},"body":{"classes/UnauthorizedException.html":{},"injectables/VaccineDetailsService.html":{}}}],["httpexception(\"user",{"_index":686,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["httponly",{"_index":185,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["https://nestjs.com",{"_index":883,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":426,"title":{},"body":{"classes/UnauthorizedException.html":{},"injectables/VaccineDetailsService.html":{}}}],["httpstatus.bad_request",{"_index":688,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["httpstatus.not_acceptable",{"_index":436,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["httpstatus.not_found",{"_index":434,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["httpstatus.unauthorized",{"_index":428,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["id",{"_index":181,"title":{},"body":{"injectables/JwtTokenService.html":{},"entities/Login.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{}}}],["identifier",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":475,"title":{},"body":{"entities/User.html":{}}}],["if(!roles",{"_index":404,"title":{},"body":{"guards/RolesGuard.html":{}}}],["if(!user.roles.includes(requiredroles",{"_index":407,"title":{},"body":{"guards/RolesGuard.html":{}}}],["ignore",{"_index":429,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["implements",{"_index":395,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":45,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["imports:[typeormmodule.forfeature([vaccinetype",{"_index":728,"title":{},"body":{"modules/VaccineTypeModule.html":{}}}],["increment",{"_index":218,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["incremental",{"_index":454,"title":{},"body":{"entities/User.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infected",{"_index":14,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["inject",{"_index":537,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(forwardref",{"_index":539,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":140,"title":{"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectrepository",{"_index":334,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{}}}],["injectrepository(login",{"_index":335,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":538,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(vaccinedetails",{"_index":665,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["injectrepository(vaccinetype",{"_index":738,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["input",{"_index":249,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":845,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":847,"title":{},"body":{"index.html":{}}}],["interface",{"_index":410,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":412,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["isactive",{"_index":205,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["isboolean",{"_index":54,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["isemail",{"_index":51,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["isnumber",{"_index":49,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/User.html":{}}}],["isnumber()aadharno",{"_index":61,"title":{},"body":{"classes/AddUserDto.html":{}}}],["isstring",{"_index":48,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["join",{"_index":873,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":236,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{}}}],["jwt",{"_index":178,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["jwtmodule",{"_index":287,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["jwtmodule.register",{"_index":292,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["jwtservice",{"_index":154,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["jwttokenservice",{"_index":146,"title":{"injectables/JwtTokenService.html":{}},"body":{"injectables/JwtTokenService.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwttokenservice:jwttokenservice",{"_index":397,"title":{},"body":{"guards/RolesGuard.html":{}}}],["kamil",{"_index":880,"title":{},"body":{"index.html":{}}}],["length",{"_index":50,"title":{},"body":{"classes/AddUserDto.html":{}}}],["length(1)gender",{"_index":62,"title":{},"body":{"classes/AddUserDto.html":{}}}],["length(8,16",{"_index":59,"title":{},"body":{"classes/AddUserDto.html":{}}}],["length(8,16)address",{"_index":63,"title":{},"body":{"classes/AddUserDto.html":{}}}],["license",{"_index":886,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":863,"title":{},"body":{"index.html":{}}}],["line",{"_index":372,"title":{},"body":{"injectables/LoginService.html":{}}}],["localhost",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":256,"title":{},"body":{"controllers/LoginController.html":{},"classes/UnauthorizedException.html":{}}}],["logged",{"_index":261,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["logicaluserdelete",{"_index":486,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["logicaluserdelete(@param('id",{"_index":515,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{}}}],["logicaluserdelete(id",{"_index":496,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["logicaluserdelete(id:number):promise",{"_index":694,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["login",{"_index":111,"title":{"entities/Login.html":{}},"body":{"modules/AppModule.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{},"coverage.html":{}}}],["login(emailid",{"_index":245,"title":{},"body":{"controllers/LoginController.html":{}}}],["login,vaccinetype",{"_index":652,"title":{},"body":{"modules/VaccineDetailsModule.html":{}}}],["login.controller",{"_index":289,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.createdat",{"_index":344,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["login.createtime",{"_index":342,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["login.emailid",{"_index":346,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["login.enetiy",{"_index":472,"title":{},"body":{"entities/User.html":{}}}],["login.id",{"_index":366,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.isactive",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["login.password",{"_index":354,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["login.service",{"_index":267,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["login.updatedat",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["login.updatedtime",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["login.user",{"_index":458,"title":{},"body":{"entities/User.html":{}}}],["login/login.service",{"_index":521,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{}}}],["logincontroller",{"_index":241,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["loginjwttoken",{"_index":303,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginjwttoken(emailid",{"_index":323,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodule",{"_index":98,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginobj",{"_index":339,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.createdat",{"_index":343,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.createtime",{"_index":341,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.emailid",{"_index":345,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.id",{"_index":347,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.isactive",{"_index":352,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.password",{"_index":353,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.updatedat",{"_index":348,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj.updatedtime",{"_index":350,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobj1",{"_index":358,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginobjcurrent",{"_index":368,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginrepository",{"_index":308,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["loginresult",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["loginresult.user",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["loginservice",{"_index":266,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":244,"title":{},"body":{"controllers/LoginController.html":{}}}],["logout(@res",{"_index":279,"title":{},"body":{"controllers/LoginController.html":{}}}],["logout(response",{"_index":252,"title":{},"body":{"controllers/LoginController.html":{}}}],["many",{"_index":232,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["manytoone",{"_index":612,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["manytoone(undefined",{"_index":606,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["matches",{"_index":52,"title":{},"body":{"classes/AddUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":60,"title":{},"body":{"classes/AddUserDto.html":{}}}],["matching",{"_index":65,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":40,"title":{},"body":{"classes/AddUserDto.html":{},"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["message:\"success",{"_index":198,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["metadata",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":751,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":190,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["methods",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["mgmnt",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":824,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":862,"title":{},"body":{"index.html":{}}}],["mode",{"_index":852,"title":{},"body":{"index.html":{}}}],["module",{"_index":91,"title":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":93,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/login/login.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaccination",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/vaccine",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":875,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":881,"title":{},"body":{"index.html":{}}}],["name",{"_index":157,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":843,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":885,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":392,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":171,"title":{},"body":{"injectables/JwtTokenService.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":47,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"entities/VaccineType.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"dependencies.html":{}}}],["new",{"_index":340,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["newentry",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":371,"title":{},"body":{"injectables/LoginService.html":{}}}],["node.js",{"_index":835,"title":{},"body":{"index.html":{}}}],["noofdoses",{"_index":69,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{},"entities/VaccineDetails.html":{}}}],["npm",{"_index":846,"title":{},"body":{"index.html":{}}}],["number",{"_index":20,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"injectables/ValidationPipe.html":{}}}],["obj",{"_index":328,"title":{},"body":{"injectables/LoginService.html":{}}}],["object",{"_index":250,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["object.assign",{"_index":357,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["object.assign({},adduserdto",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["objects",{"_index":491,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["observable",{"_index":390,"title":{},"body":{"guards/RolesGuard.html":{}}}],["one",{"_index":231,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["onetomany",{"_index":470,"title":{},"body":{"entities/User.html":{},"entities/VaccineType.html":{}}}],["onetomany(undefined",{"_index":467,"title":{},"body":{"entities/User.html":{},"entities/VaccineType.html":{}}}],["onetoone",{"_index":237,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{}}}],["onetoone(undefined",{"_index":225,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{}}}],["open",{"_index":864,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opertaions",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":158,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{},"overview.html":{}}}],["overview",{"_index":890,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":801,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":272,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["param('date",{"_index":640,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["param('emailid",{"_index":637,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["param('id",{"_index":513,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":156,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["parital",{"_index":679,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["parser",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":275,"title":{},"body":{"controllers/LoginController.html":{}}}],["password",{"_index":15,"title":{},"body":{"classes/AddUserDto.html":{},"modules/AppModule.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"entities/User.html":{}}}],["person",{"_index":235,"title":{},"body":{"entities/Login.html":{}}}],["phonenum",{"_index":16,"title":{},"body":{"classes/AddUserDto.html":{},"entities/User.html":{}}}],["pipetransform",{"_index":756,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":758,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":761,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":432,"title":{},"body":{"classes/UnauthorizedException.html":{},"index.html":{}}}],["point",{"_index":421,"title":{},"body":{"classes/UnauthorizedException.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["port",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":263,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{}}}],["post('/:emailid",{"_index":620,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["post('/loginjwt",{"_index":246,"title":{},"body":{"controllers/LoginController.html":{}}}],["post('logout",{"_index":253,"title":{},"body":{"controllers/LoginController.html":{}}}],["pranathi",{"_index":398,"title":{},"body":{"guards/RolesGuard.html":{}}}],["prefix",{"_index":243,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{}}}],["prettier/prettier",{"_index":57,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"modules/LoginModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{}}}],["primarygeneratedcolumn",{"_index":215,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["private",{"_index":173,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":854,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":834,"title":{},"body":{"index.html":{}}}],["project",{"_index":865,"title":{},"body":{"index.html":{}}}],["promise",{"_index":165,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"injectables/LoginService.html":{},"interfaces/SwaggerConfig.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{}}}],["providers/jwtservice.service",{"_index":394,"title":{},"body":{"guards/RolesGuard.html":{}}}],["put",{"_index":505,"title":{},"body":{"controllers/UserController.html":{},"controllers/VaccineDetailsController.html":{}}}],["put('/updateuserdetails/:id",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":874,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/LoginController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"controllers/VaccineTypeController.html":{}}}],["recives",{"_index":248,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["recvies",{"_index":327,"title":{},"body":{"injectables/LoginService.html":{}}}],["reflect",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":384,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reflector:reflector",{"_index":396,"title":{},"body":{"guards/RolesGuard.html":{}}}],["relation",{"_index":233,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["repository",{"_index":306,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{},"injectables/VaccineTypeService.html":{},"index.html":{}}}],["req",{"_index":264,"title":{},"body":{"controllers/LoginController.html":{}}}],["request",{"_index":167,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["request):promise",{"_index":188,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["request.cookies['jwt",{"_index":192,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["requiredroles",{"_index":405,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":265,"title":{},"body":{"controllers/LoginController.html":{}}}],["reset",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{},"overview.html":{}}}],["response",{"_index":160,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["response.clearcookie('jwt",{"_index":197,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{}}}],["response.cookie('jwt",{"_index":184,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["result",{"_index":298,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{}}}],["result.emailid",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["result.password",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["result.updatedat",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["result.updatedtime",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["result.user",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["result2",{"_index":667,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["results",{"_index":64,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resultt",{"_index":691,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["return",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":401,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles:['standard",{"_index":399,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":379,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["root",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":849,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":393,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":839,"title":{},"body":{"index.html":{}}}],["secret",{"_index":293,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["server",{"_index":840,"title":{},"body":{"index.html":{}}}],["side",{"_index":841,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":294,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{}}}],["slug",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":868,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":826,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/filter/customexception.exception",{"_index":664,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["src/common/filter/customexception.exception.ts",{"_index":419,"title":{},"body":{"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["src/common/filter/customexception.exception.ts:8",{"_index":425,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":381,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts:10",{"_index":385,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:15",{"_index":388,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/pipes/validationpipe.ts",{"_index":745,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validationpipe.ts:10",{"_index":755,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validationpipe.ts:22",{"_index":750,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/providers/jwtservice.service.ts",{"_index":147,"title":{},"body":{"injectables/JwtTokenService.html":{},"coverage.html":{}}}],["src/common/providers/jwtservice.service.ts:14",{"_index":155,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["src/common/providers/jwtservice.service.ts:21",{"_index":164,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["src/common/providers/jwtservice.service.ts:30",{"_index":168,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["src/common/providers/jwtservice.service.ts:38",{"_index":161,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["src/config/swagger/swagger.config.ts",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger/swagger.interface.ts",{"_index":413,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/config/swagger/swagger.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/entity/dto/adduser.dto",{"_index":506,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["src/entity/dto/adduser.dto.ts",{"_index":6,"title":{},"body":{"classes/AddUserDto.html":{},"coverage.html":{}}}],["src/entity/dto/adduser.dto.ts:12",{"_index":42,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:13",{"_index":43,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:14",{"_index":24,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:15",{"_index":33,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:16",{"_index":29,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:17",{"_index":36,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:18",{"_index":28,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:8",{"_index":44,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/adduser.dto.ts:9",{"_index":31,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/entity/dto/addvaccinedetails.dto",{"_index":631,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["src/entity/dto/addvaccinedetails.dto.ts",{"_index":67,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{},"coverage.html":{}}}],["src/entity/dto/addvaccinedetails.dto.ts:6",{"_index":75,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{}}}],["src/entity/dto/addvaccinedetails.dto.ts:7",{"_index":73,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{}}}],["src/entity/dto/addvaccinedetails.dto.ts:8",{"_index":74,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{}}}],["src/entity/typeorm/login.enetiy",{"_index":288,"title":{},"body":{"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{}}}],["src/entity/typeorm/login.enetiy.ts",{"_index":200,"title":{},"body":{"entities/Login.html":{},"coverage.html":{}}}],["src/entity/typeorm/login.enetiy.ts:17",{"_index":216,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:25",{"_index":214,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:33",{"_index":221,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:40",{"_index":220,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:47",{"_index":223,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:54",{"_index":209,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:61",{"_index":224,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:68",{"_index":212,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/login.enetiy.ts:77",{"_index":229,"title":{},"body":{"entities/Login.html":{}}}],["src/entity/typeorm/user.emtity",{"_index":172,"title":{},"body":{"injectables/JwtTokenService.html":{},"modules/LoginModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{}}}],["src/entity/typeorm/user.emtity.ts",{"_index":442,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/entity/typeorm/user.emtity.ts:103",{"_index":457,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:110",{"_index":464,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:117",{"_index":448,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:124",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:131",{"_index":449,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:133",{"_index":462,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:149",{"_index":459,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:157",{"_index":469,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:21",{"_index":453,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:29",{"_index":466,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:37",{"_index":451,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:45",{"_index":461,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:54",{"_index":463,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:63",{"_index":445,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:72",{"_index":452,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:80",{"_index":447,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:88",{"_index":456,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/user.emtity.ts:96",{"_index":446,"title":{},"body":{"entities/User.html":{}}}],["src/entity/typeorm/vaccinationdata.entity",{"_index":632,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts",{"_index":594,"title":{},"body":{"entities/VaccineDetails.html":{},"coverage.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:102",{"_index":611,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:17",{"_index":600,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:25",{"_index":609,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:33",{"_index":598,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:41",{"_index":602,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:49",{"_index":603,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:56",{"_index":601,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:63",{"_index":604,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:70",{"_index":596,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:77",{"_index":605,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:84",{"_index":597,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinationdata.entity.ts:93",{"_index":608,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["src/entity/typeorm/vaccinetype.emtity",{"_index":647,"title":{},"body":{"modules/VaccineDetailsModule.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts",{"_index":698,"title":{},"body":{"entities/VaccineType.html":{},"coverage.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:16",{"_index":701,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:24",{"_index":707,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:31",{"_index":702,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:38",{"_index":703,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:44",{"_index":699,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:51",{"_index":704,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:58",{"_index":700,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/entity/typeorm/vaccinetype.emtity.ts:68",{"_index":706,"title":{},"body":{"entities/VaccineType.html":{}}}],["src/main.ts",{"_index":792,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/login/login.controller.ts",{"_index":242,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/modules/login/login.controller.ts:20",{"_index":247,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/modules/login/login.controller.ts:34",{"_index":259,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/modules/login/login.controller.ts:44",{"_index":254,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/modules/login/login.module.ts",{"_index":285,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/modules/login/login.service.ts",{"_index":297,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/modules/login/login.service.ts:104",{"_index":322,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:13",{"_index":307,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:27",{"_index":310,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:36",{"_index":315,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:47",{"_index":318,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:57",{"_index":326,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:84",{"_index":324,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:98",{"_index":332,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/user/user.controller.ts",{"_index":483,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:23",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:33",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:44",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:57",{"_index":498,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":520,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":524,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:127",{"_index":534,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:15",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:31",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:70",{"_index":533,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:74",{"_index":532,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:78",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:89",{"_index":535,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/vaccination",{"_index":615,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"coverage.html":{}}}],["src/modules/vaccine",{"_index":709,"title":{},"body":{"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"coverage.html":{}}}],["staring",{"_index":420,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["start",{"_index":850,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":853,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":855,"title":{},"body":{"index.html":{}}}],["started",{"_index":833,"title":{"index.html":{}},"body":{}}],["starter",{"_index":844,"title":{},"body":{"index.html":{}}}],["starting",{"_index":202,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["statements",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":443,"title":{},"body":{"entities/User.html":{}}}],["status",{"_index":595,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["stay",{"_index":877,"title":{},"body":{"index.html":{}}}],["string",{"_index":25,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"interfaces/SwaggerConfig.html":{},"entities/User.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{}}}],["strongpassword",{"_index":477,"title":{},"body":{"entities/User.html":{}}}],["succefully",{"_index":313,"title":{},"body":{"injectables/LoginService.html":{}}}],["succesfully",{"_index":330,"title":{},"body":{"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["success",{"_index":187,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["successfully",{"_index":280,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{}}}],["sucesfully",{"_index":255,"title":{},"body":{"controllers/LoginController.html":{}}}],["super(\"authentication",{"_index":440,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"invalid",{"_index":427,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"no",{"_index":438,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"user",{"_index":431,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["support",{"_index":869,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":888,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":414,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger_config",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":411,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":495,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":416,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["task",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasks",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":858,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":861,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":860,"title":{},"body":{"index.html":{}}}],["tests",{"_index":857,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":867,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["this.getbyid",{"_index":369,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.getbyid(id",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.signasync",{"_index":180,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["this.jwtservice.verifyasync(cookie",{"_index":195,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/LoginService.html":{}}}],["this.loginrepository.findone",{"_index":337,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginrepository.findone(condition",{"_index":338,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginrepository.save(login",{"_index":336,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginrepository.update(id",{"_index":360,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginrepository.update(result.id",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loginservice.addlogindetails(login",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loginservice.getbyemailid(user.emailid",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loginservice.getbyemailid(userresult.emailid",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loginservice.getlogggedinuser(request",{"_index":278,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.loginjwttoken(emailid",{"_index":276,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.updatelogindetails(loginresult.id",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["this.password",{"_index":479,"title":{},"body":{"entities/User.html":{}}}],["this.reflector.get('roles',context.gethandler",{"_index":402,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.result",{"_index":377,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.tovalidate(metatype",{"_index":760,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.find",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(id",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(id",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.update(user.id",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.adduserdetails(adduserdto",{"_index":511,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyemailid(emailid",{"_index":361,"title":{},"body":{"injectables/LoginService.html":{},"injectables/VaccineDetailsService.html":{}}}],["this.userservice.getbyid(id",{"_index":695,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["this.userservice.getuserdetails",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.logicaluserdelete(id",{"_index":516,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuserdetails(adduserdto",{"_index":514,"title":{},"body":{"controllers/UserController.html":{}}}],["this.vaccinedetailsrepository.find",{"_index":693,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["this.vaccinedetailsrepository.save(vaccdetailsobj",{"_index":692,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["this.vaccinedetailsrepository.update(id,userresult",{"_index":697,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["this.vaccinedetailsservice.addvaccinedetails",{"_index":638,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["this.vaccinedetailsservice.getvaccinedata",{"_index":639,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["this.vaccinedetailsservice.getvaccinedataondate(date",{"_index":641,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["this.vaccinedetailsservice.logicaluserdelete(id",{"_index":642,"title":{},"body":{"controllers/VaccineDetailsController.html":{}}}],["this.vaccinetyperepository.findone",{"_index":742,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["this.vaccinetyperepository.save(vaccinetype",{"_index":740,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["this.vaccinetypeservice.addvaccinetype(vaccinetype",{"_index":722,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["this.vaccinetypeservice.getvaccinetype(vaccinedetails.vaccinename",{"_index":668,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["throw",{"_index":362,"title":{},"body":{"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/VaccineDetailsService.html":{},"injectables/ValidationPipe.html":{}}}],["title",{"_index":417,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":251,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["touch",{"_index":878,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":746,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":748,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":747,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":752,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":759,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":186,"title":{},"body":{"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{}}}],["true})@joincolumn",{"_index":228,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{}}}],["twitter",{"_index":884,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"modules/AppModule.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"interfaces/SwaggerConfig.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"injectables/VaccineTypeService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type.controller",{"_index":727,"title":{},"body":{"modules/VaccineTypeModule.html":{}}}],["type.controller.ts",{"_index":710,"title":{},"body":{"controllers/VaccineTypeController.html":{},"coverage.html":{}}}],["type.controller.ts:20",{"_index":713,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["type.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["type.module.ts",{"_index":726,"title":{},"body":{"modules/VaccineTypeModule.html":{}}}],["type.service",{"_index":649,"title":{},"body":{"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{}}}],["type.service.ts",{"_index":730,"title":{},"body":{"injectables/VaccineTypeService.html":{},"coverage.html":{}}}],["type.service.ts:11",{"_index":733,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["type.service.ts:24",{"_index":735,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["type.service.ts:28",{"_index":737,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["type/vaccine",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"coverage.html":{}}}],["typeorm",{"_index":238,"title":{},"body":{"entities/Login.html":{},"injectables/LoginService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"injectables/VaccineTypeService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{}}}],["typeormmodule.forfeature([login",{"_index":291,"title":{},"body":{"modules/LoginModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":523,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([vaccinedetails",{"_index":651,"title":{},"body":{"modules/VaccineDetailsModule.html":{}}}],["typeormmodule.forroot",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":768,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":770,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":373,"title":{},"body":{"injectables/LoginService.html":{},"index.html":{}}}],["ui",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":391,"title":{"classes/UnauthorizedException.html":{}},"body":{"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["unauthorizedexception(\"user",{"_index":408,"title":{},"body":{"guards/RolesGuard.html":{}}}],["undefined",{"_index":753,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unit",{"_index":856,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"injectables/JwtTokenService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/ValidationPipe.html":{}}}],["unused",{"_index":375,"title":{},"body":{"injectables/LoginService.html":{}}}],["updated",{"_index":502,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":206,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["updatedtime",{"_index":207,"title":{},"body":{"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{}}}],["updatelogindetails",{"_index":304,"title":{},"body":{"injectables/LoginService.html":{}}}],["updatelogindetails(id",{"_index":325,"title":{},"body":{"injectables/LoginService.html":{}}}],["updateuserdetails",{"_index":487,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserdetails(adduserdto",{"_index":499,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user",{"_index":113,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtTokenService.html":{},"entities/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"guards/RolesGuard.html":{},"classes/UnauthorizedException.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/VaccineDetails.html":{},"modules/VaccineDetailsModule.html":{},"coverage.html":{}}}],["user','user",{"_index":400,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user(@req",{"_index":277,"title":{},"body":{"controllers/LoginController.html":{}}}],["user(request",{"_index":257,"title":{},"body":{"controllers/LoginController.html":{}}}],["user.aadharno",{"_index":540,"title":{},"body":{"injectables/UserService.html":{}}}],["user.address",{"_index":542,"title":{},"body":{"injectables/UserService.html":{}}}],["user.age",{"_index":544,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":522,"title":{},"body":{"modules/UserModule.html":{}}}],["user.createdat",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["user.createtime",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["user.emailid",{"_index":546,"title":{},"body":{"injectables/UserService.html":{}}}],["user.emtity",{"_index":239,"title":{},"body":{"entities/Login.html":{},"entities/VaccineDetails.html":{}}}],["user.gender",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":182,"title":{},"body":{"injectables/JwtTokenService.html":{},"injectables/UserService.html":{}}}],["user.infected",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isactive",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["user.login",{"_index":226,"title":{},"body":{"entities/Login.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["user.phonenum",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":507,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.updatedat",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["user.updatedtime",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["user.username",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["user.vaccinedetails",{"_index":607,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["user/user.service",{"_index":290,"title":{},"body":{"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{}}}],["usercontroller",{"_index":482,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":99,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":17,"title":{},"body":{"classes/AddUserDto.html":{},"modules/AppModule.html":{},"entities/User.html":{}}}],["usernotfoundexception",{"_index":430,"title":{},"body":{"classes/UnauthorizedException.html":{},"injectables/VaccineDetailsService.html":{}}}],["userrepository",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["userresult",{"_index":584,"title":{},"body":{"injectables/UserService.html":{},"injectables/VaccineDetailsService.html":{}}}],["userresult.isactive",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["userresult.isactive=false",{"_index":696,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["userresult.updatedat",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["userresult.updatedtime",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":494,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":284,"title":{"injectables/UserService.html":{}},"body":{"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"coverage.html":{},"overview.html":{}}}],["usersevice",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["vaccdetailsobj",{"_index":666,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.createdat",{"_index":672,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.createtime",{"_index":671,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.dosedate",{"_index":680,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.isactive",{"_index":670,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.noofdoses",{"_index":675,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.status",{"_index":678,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.updatedat",{"_index":673,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.updatedtime",{"_index":674,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.user",{"_index":669,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.vaccinename",{"_index":682,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccdetailsobj.vaccinetype",{"_index":689,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccinated",{"_index":687,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccination",{"_index":624,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{}}}],["vaccinationdata.entity",{"_index":473,"title":{},"body":{"entities/User.html":{},"entities/VaccineType.html":{}}}],["vaccinationdetails",{"_index":623,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["vaccine",{"_index":648,"title":{},"body":{"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{}}}],["vaccinedata",{"_index":628,"title":{},"body":{"controllers/VaccineDetailsController.html":{},"injectables/VaccineDetailsService.html":{}}}],["vaccinedetails",{"_index":118,"title":{"entities/VaccineDetails.html":{}},"body":{"modules/AppModule.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"entities/VaccineType.html":{},"coverage.html":{}}}],["vaccinedetails.dosedate",{"_index":681,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccinedetails.noofdoses",{"_index":676,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccinedetails.user",{"_index":468,"title":{},"body":{"entities/User.html":{}}}],["vaccinedetails.vaccinename",{"_index":683,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccinedetails.vaccinetype",{"_index":705,"title":{},"body":{"entities/VaccineType.html":{}}}],["vaccinedetailscontroller",{"_index":614,"title":{"controllers/VaccineDetailsController.html":{}},"body":{"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"coverage.html":{}}}],["vaccinedetailsmodule",{"_index":100,"title":{"modules/VaccineDetailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaccineDetailsModule.html":{},"modules.html":{},"overview.html":{}}}],["vaccinedetailsrepository",{"_index":658,"title":{},"body":{"injectables/VaccineDetailsService.html":{}}}],["vaccinedetailsservice",{"_index":633,"title":{"injectables/VaccineDetailsService.html":{}},"body":{"controllers/VaccineDetailsController.html":{},"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"coverage.html":{},"overview.html":{}}}],["vaccinedetailsservice,vaccinetypeservice,userservice,loginservice",{"_index":653,"title":{},"body":{"modules/VaccineDetailsModule.html":{}}}],["vaccinename",{"_index":70,"title":{},"body":{"classes/AddVaccineDetailsDto.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"injectables/VaccineTypeService.html":{}}}],["vaccinename:vaccinename",{"_index":743,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["vaccinetype",{"_index":116,"title":{"entities/VaccineType.html":{}},"body":{"modules/AppModule.html":{},"entities/VaccineDetails.html":{},"modules/VaccineDetailsModule.html":{},"entities/VaccineType.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"coverage.html":{}}}],["vaccinetype.createdat",{"_index":719,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["vaccinetype.createtime",{"_index":718,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["vaccinetype.emtity",{"_index":613,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["vaccinetype.isactive",{"_index":717,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["vaccinetype.updatedat",{"_index":720,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["vaccinetype.updatedtime",{"_index":721,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["vaccinetype.vaccinedetails",{"_index":610,"title":{},"body":{"entities/VaccineDetails.html":{}}}],["vaccinetype:vaccinetype):promise",{"_index":716,"title":{},"body":{"controllers/VaccineTypeController.html":{}}}],["vaccinetypecontroller",{"_index":708,"title":{"controllers/VaccineTypeController.html":{}},"body":{"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"coverage.html":{}}}],["vaccinetypemodule",{"_index":101,"title":{"modules/VaccineTypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VaccineTypeModule.html":{},"modules.html":{},"overview.html":{}}}],["vaccinetyperepository",{"_index":734,"title":{},"body":{"injectables/VaccineTypeService.html":{}}}],["vaccinetypeservice",{"_index":645,"title":{"injectables/VaccineTypeService.html":{}},"body":{"modules/VaccineDetailsModule.html":{},"injectables/VaccineDetailsService.html":{},"controllers/VaccineTypeController.html":{},"modules/VaccineTypeModule.html":{},"injectables/VaccineTypeService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":757,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":763,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":744,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AddUserDto.html":{},"classes/AddVaccineDetailsDto.html":{},"entities/Login.html":{},"entities/User.html":{},"entities/VaccineDetails.html":{},"entities/VaccineType.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":331,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":895,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":376,"title":{},"body":{"injectables/LoginService.html":{}}}],["verifytoken",{"_index":151,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["verifytoken(request",{"_index":166,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["version",{"_index":418,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["watch",{"_index":851,"title":{},"body":{"index.html":{}}}],["weak",{"_index":41,"title":{},"body":{"classes/AddUserDto.html":{}}}],["website",{"_index":882,"title":{},"body":{"index.html":{}}}],["world",{"_index":145,"title":{},"body":{"injectables/AppService.html":{}}}],["wrongcredentialsexception",{"_index":435,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["you'd",{"_index":872,"title":{},"body":{"index.html":{}}}],["z",{"_index":39,"title":{},"body":{"classes/AddUserDto.html":{}}}],["z])(?=.*[a",{"_index":38,"title":{},"body":{"classes/AddUserDto.html":{}}}],["zoom",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/VaccineDetailsModule.html":{},"modules/VaccineTypeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddUserDto.html":{"url":"classes/AddUserDto.html","title":"class - AddUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/dto/addUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aadharNo\n                            \n                            \n                                address\n                            \n                            \n                                age\n                            \n                            \n                                emailId\n                            \n                            \n                                gender\n                            \n                            \n                                infected\n                            \n                            \n                                password\n                            \n                            \n                                phoneNum\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aadharNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(8, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(8, 16)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(8, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNumber, Length, IsEmail, Matches } from \"class-validator\";\nimport { IsBoolean } from 'class-validator';\n\n/* eslint-disable prettier/prettier */\nexport class AddUserDto {\n    @ApiProperty() @IsString() @Length(8,16) userName: string;\n    @ApiProperty() @IsEmail()  emailId: string;\n    @ApiProperty() @IsString() @Length(8,16)  \n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n    password: string;\n    @ApiProperty() @IsNumber() phoneNum: number;\n    @ApiProperty() @IsNumber()aadharNo: number;\n    @ApiProperty() @IsString() @Length(1)gender: string;\n    @ApiProperty() @IsNumber() age: number;\n    @ApiProperty() @IsBoolean() infected: boolean;\n    @ApiProperty() @IsString()  @Length(8,16)address: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddVaccineDetailsDto.html":{"url":"classes/AddVaccineDetailsDto.html","title":"class - AddVaccineDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddVaccineDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/dto/addVaccineDetails.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doseDate\n                            \n                            \n                                noOfDoses\n                            \n                            \n                                vaccineName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        doseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addVaccineDetails.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfDoses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addVaccineDetails.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/dto/addVaccineDetails.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNumber } from \"class-validator\";\n/* eslint-disable prettier/prettier */\nexport class AddVaccineDetailsDto {\n    @ApiProperty() @IsString() vaccineName: string;\n    @ApiProperty() @IsString() doseDate: Date;\n    @ApiProperty() @IsNumber() noOfDoses: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nLoginModule\n\nLoginModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nVaccineDetailsModule\n\nVaccineDetailsModule\n\nAppModule -->\n\nVaccineDetailsModule->AppModule\n\n\n\n\n\nVaccineTypeModule\n\nVaccineTypeModule\n\nAppModule -->\n\nVaccineTypeModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            VaccineDetailsModule\n                        \n                        \n                            VaccineTypeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Login } from './entity/typeorm/login.enetiy';\nimport { User } from './entity/typeorm/user.emtity';\nimport { UserModule } from './modules/user/user.module';\nimport { VaccineType } from './entity/typeorm/vaccineType.emtity';\nimport { VaccineDetails } from './entity/typeorm/vaccinationData.entity';\nimport { VaccineDetailsModule } from './modules/vaccination-data/vaccination-data.module';\nimport { VaccineTypeModule } from './modules/vaccine-type/vaccine-type.module';\nimport { LoginModule } from './modules/login/login.module';\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'Chelli1@',\n      database: 'CovidApp',\n      entities: [User, Login, VaccineType, VaccineDetails],\n      synchronize: false,\n    }),\n    UserModule,\n    VaccineTypeModule,\n    VaccineDetailsModule,\n    LoginModule,\n  ],\n\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtTokenService.html":{"url":"injectables/JwtTokenService.html","title":"injectable - JwtTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/jwtService.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteToken\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/common/providers/jwtService.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteToken(response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/jwtService.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User, response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/jwtService.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/jwtService.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {  Injectable } from '@nestjs/common';\nimport { Response, Request, response } from 'express';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from 'src/entity/typeorm/user.emtity';\n\n\n\n@Injectable()\nexport class JwtTokenService {\n\n    constructor(\n        private jwtService: JwtService\n    ) { }  \n//   create,delete,verify\n  \n       async  generateToken(user:User, response: any):Promise{\n        const jwt = await this.jwtService.signAsync({ id: user.id });\n        console.log(\" \", jwt);\n        response.cookie('jwt', jwt, { httpOnly: true });\n        return {\n            message: 'Success'\n        }\n        }\n\n        async verifyToken(request: Request):Promise{\n            console.log(\"into method\");\n            const cookie = request.cookies['jwt'];\n            console.log(\"cookie : \",cookie);\n            const data = await this.jwtService.verifyAsync(cookie);\n            return true;\n        }\n\n        async deleteToken(response:Response){\n            response.clearCookie('jwt');\n            return {\n              message:\"success\"\n            }\n          }\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Login.html":{"url":"entities/Login.html","title":"entity - Login","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/typeorm/login.enetiy.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of Login Entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                emailId\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:54\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:68\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:25\n                        \n                    \n\n            \n                \n                    generates the emailId Column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:17\n                        \n                    \n\n            \n                \n                    auto increment id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:40\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:33\n                        \n                    \n\n            \n                \n                    generates the password Column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:47\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:61\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.login, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/login.enetiy.ts:77\n                        \n                    \n\n            \n                \n                    established the one-to-many relation between the user and the person\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\n\nimport { Entity, PrimaryGeneratedColumn, Column, JoinColumn, OneToOne } from 'typeorm';\nimport { IsString } from \"class-validator\";\nimport { ApiProperty } from '@nestjs/swagger';\nimport { User } from './user.emtity';\n\n/**\n * Starting of Login Entity\n */\n@Entity()\nexport class Login {\n    /**\n     * auto increment id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates the emailId Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    emailId: string;\n\n    /**\n     * generates the password Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    password: string;\n\n    /**\n    * generates isActive column\n    */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n    /**\n    * established the one-to-many relation between the user and the person\n    */\n    @OneToOne(() => User, (user) => user.login, {\n        cascade: true\n    })\n    @JoinColumn()\n    user: User;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(emailId: string, password: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/loginJwt')\n                \n            \n\n            \n                \n                    Defined in src/modules/login/login.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string type of input\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string type of input\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives response object of input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        jwt token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/modules/login/login.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives response object of input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        a message if user sucesfully log out\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getUser')\n                \n            \n\n            \n                \n                    Defined in src/modules/login/login.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives request object of input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        user object of current logged in user\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, Res } from '@nestjs/common';\nimport { LoginService } from './login.service';\nimport { Response, Request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('login')\n// @ApiBearerAuth()\n@ApiTags('login-token')\nexport class LoginController {\n  constructor(private readonly loginService: LoginService) {}\n\n  /**\n   *\n   * @param emailId recives string type of input\n   * @param password recives string type of input\n   * @param response recives response object of input\n   * @returns jwt token\n   */\n  @Post('/loginJwt')\n  login(\n    @Body('emailId') emailId: string,\n    @Body('password') password: string,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    return this.loginService.loginJwtToken(emailId, password, response);\n  }\n\n  /**\n   *\n   * @param request recives request object of input\n   * @returns user object of current logged in user\n   */\n  @Get('/getUser')\n  async user(@Req() request: Request) {\n    return await this.loginService.getLogggedInUser(request);\n  }\n\n  /**\n   *\n   * @param response recives response object of input\n   * @returns a message if user sucesfully log out\n   */\n  @Post('logout')\n  async logout(@Res({ passthrough: true }) response: Response) {\n    response.clearCookie('jwt');\n    return {\n      message: 'successfully logged out',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nLoginService \n\nLoginService \n\n\n\nLoginModule\n\nLoginModule\n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nUserService\n\nUserService\n\nLoginModule -->\n\nUserService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Login } from 'src/entity/typeorm/login.enetiy';\nimport { LoginController } from './login.controller';\nimport { LoginService } from './login.service';\nimport { UserService } from '../user/user.service';\nimport { User } from 'src/entity/typeorm/user.emtity';\n@Module({\n  imports: [TypeOrmModule.forFeature([Login, User]),\n\n  JwtModule.register({\n    secret: 'secret',\n    signOptions: { expiresIn: '1d' },\n  })],\n  controllers: [LoginController],\n  providers: [LoginService, UserService],\n  exports: [LoginService]\n})\nexport class LoginModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLoginDetails\n                            \n                            \n                                    Async\n                                getByEmailId\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getLogggedInUser\n                            \n                            \n                                    Async\n                                loginJwtToken\n                            \n                            \n                                    Async\n                                updateLoginDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginRepository: Repository, jwtService: JwtService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/login/login.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLoginDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLoginDetails(login: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives number as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a promise if login object gets added succefully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByEmailId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailId(emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a promise if object is found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(condition: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives any type of input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a promise object based on condition\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLogggedInUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogggedInUser(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives request object as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        return current logged in user object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginJwtToken(emailId: string, password: string, response: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string as input\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string as input\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        return jwt token based on login object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLoginDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLoginDetails(id: number, login: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives number as input\n\n                                    \n                                \n                                \n                                    login\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recvies login obj as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        a message if user gets deleted succesfully\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/modules/login/login.service.ts:98\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Login } from 'src/entity/typeorm/login.enetiy';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { Request } from 'express';\nimport { UserService } from '../user/user.service';\n\n\n@Injectable()\nexport class LoginService {\n    constructor(\n        @InjectRepository(Login)\n        private loginRepository: Repository,\n        private jwtService: JwtService,\n        private userService: UserService\n\n    ) { }\n\n    /**\n     * \n     * @param login recives number as input\n     * @returns a promise if login object gets added succefully\n     */\n    async addLoginDetails(login: Login): Promise {\n        return await this.loginRepository.save(login)\n    }\n\n    /**\n     * \n     * @param emailId recives string as input\n     * @returns a promise if object is found\n     */\n    async getByEmailId(emailId: string): Promise {\n        return await this.loginRepository.findOne(\n            { emailId: emailId }\n        )\n    }\n\n    /**\n     * \n     * @param condition recives any type of input\n     * @returns a promise object based on condition\n     */\n    async getById(condition: any): Promise {\n        return this.loginRepository.findOne(condition);\n    }\n\n    /**\n     * \n     * @param id recives number as input\n     * @param login  recvies login obj as input\n     * @returns a message if user gets deleted succesfully\n     */\n    async updateLoginDetails(id: number, login: Login) {\n        const loginObj: Login = new Login();\n        const date = new Date();\n        loginObj.createTime = login.createTime;\n        loginObj.createdAt = login.createdAt;\n        loginObj.emailId = login.emailId;\n        //loginObj.id = id;\n        // loginObj.updatedAt = date.getDate().toString();\n        // loginObj.updatedTime = date.getTime().toString();\n        loginObj.isActive = false;\n        loginObj.password = login.password;\n        loginObj.updatedAt = date.toLocaleTimeString();\n        loginObj.updatedTime = date.toLocaleDateString();\n        // Object.assign({}, loginObj1, login, loginObj);\n        console.log('login:  ', loginObj, 'id: ', id);\n\n        return await this.loginRepository.update(id, loginObj);\n\n    }\n\n    /**\n     * \n     * @param emailId recives string as input\n     * @param password recives string as input\n     * @param response return jwt token based on login object\n     * @returns \n     */\n    async loginJwtToken(emailId: string, password: string, response: any): Promise {\n        const login = await this.userService.getByEmailId(emailId);\n        if (!login) {\n            throw new BadRequestException('Invalid Credentials');\n        }\n        if (!await bcrypt.compare(password, login.password)) {\n            throw new BadRequestException('invalid Credentials');\n        }\n        const jwt = await this.jwtService.signAsync({ id: login.id });\n        console.log(\"';';\", jwt);\n        response.cookie('jwt', jwt, { httpOnly: true });\n        return jwt;\n    }\n\n    result: any = \"\";\n    /**\n     * \n     * @param request recives request object as input\n     * @returns return current logged in user object\n     */\n    async getLogggedInUser(request: Request) {\n        const cookie = request.cookies['jwt'];\n        console.log(\"cookie : \", cookie);\n        const data = await this.jwtService.verifyAsync(cookie);\n        console.log(\"data: \", data);\n\n        // const loginObjCurrent = await this.getById({ id: data['id'] });\n        // // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        // const { password, ...result } = loginObjCurrent;\n        // this.result = result;\n        return data;\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, jwtTokenService: JwtTokenService)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtTokenService\n                                                  \n                                                        \n                                                                        JwtTokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { JwtTokenService } from '../providers/jwtService.service';\n\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(\n    private readonly reflector:Reflector,\n    private jwtTokenService:JwtTokenService){}\n  \n    canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    \n    const user = {\n      name: \"Pranathi\",\n      roles:['standard-user','user'],\n    };\n\n    const roles = this.reflector.get('roles',context.getHandler());\n    console.log(roles);\n\n    if(!roles){\n      return true;\n    }\n    const requiredRoles = roles;\n\n    //Not Authorised\n    if(!user.roles.includes(requiredRoles)){\n      throw new UnauthorizedException(\"User not admin\");\n       //return true;\n    }\n    return true;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/swagger/swagger.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface of Swagger Config\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  title: string;\n  description: string;\n  version: string;\n  tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedException.html":{"url":"classes/UnauthorizedException.html","title":"class - UnauthorizedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/customException.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Staring point of UnauthorizedException exception\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/filter/customException.exception.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from \"@nestjs/common\";\nimport { HttpStatus } from '@nestjs/common';\n\n/**\n * Staring point of UnauthorizedException exception\n */\nexport class UnauthorizedException extends HttpException {\n    constructor() {\n        super(\"Invalid User\", HttpStatus.UNAUTHORIZED);\n    }\n}\n\n/**\n * @ignore\n */\nexport class UserNotFoundException extends HttpException {\n    constructor() {\n        super(\"User Not Found ,please log in to continue\", HttpStatus.NOT_FOUND);\n    }\n}\n\n/**\n * @ignore\n */\nexport class WrongCredentialsException extends HttpException {\n    constructor() {\n        super(\"Invalid Credentials\", HttpStatus.NOT_ACCEPTABLE);\n    }\n}\n\n/**\n * @ignore\n */\nexport class DataNotFoundException extends HttpException {\n    constructor() {\n        super(\"No data found\", HttpStatus.NOT_FOUND);\n    }\n}\n\n/**\n * @ignore\n */\nexport class AuthenticationException extends HttpException {\n    constructor() {\n        super(\"Authentication error\", HttpStatus.UNAUTHORIZED);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/typeorm/user.emtity.ts\n        \n\n\n            \n                Description\n            \n            \n                starting of User Entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aadharNo\n                            \n                            \n                                address\n                            \n                            \n                                age\n                            \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                emailId\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                infected\n                            \n                            \n                                isActive\n                            \n                            \n                                login\n                            \n                            \n                                password\n                            \n                            \n                                    Static\n                                password\n                            \n                            \n                                phoneNum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                            \n                                userName\n                            \n                            \n                                vaccineDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aadharNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:63\n                        \n                    \n\n            \n                \n                    generates aadharNo column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:96\n                        \n                    \n\n            \n                \n                    generates address column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:80\n                        \n                    \n\n            \n                \n                    generates age column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:117\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:131\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:37\n                        \n                    \n\n            \n                \n                    generates emailId column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:72\n                        \n                    \n\n            \n                \n                    generates gender column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:21\n                        \n                    \n\n            \n                \n                    auto incremental id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})@IsBoolean()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:88\n                        \n                    \n\n            \n                \n                    generates infected column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:103\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Login\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, login => login.user, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:149\n                        \n                    \n\n            \n                \n                    establishes onetoone relation between login and user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:45\n                        \n                    \n\n            \n                \n                    generates password column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:54\n                        \n                    \n\n            \n                \n                    generates phoneNum column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:110\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:124\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:29\n                        \n                    \n\n            \n                \n                    generates UserName column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaccineDetails[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, vaccineDetails => vaccineDetails.user, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/user.emtity.ts:157\n                        \n                    \n\n            \n                \n                    establishes onetomany relation between vaccinedetails and user\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Entity, PrimaryGeneratedColumn, Column, BeforeInsert, OneToOne, OneToMany } from \"typeorm\";\nimport * as bcrypt from 'bcrypt';\nimport { IsBoolean, IsEmail, IsNumber, IsString } from \"class-validator\";\nimport { Login } from \"./login.enetiy\";\nimport { VaccineDetails } from \"./vaccinationData.entity\";\n\n/* eslint-disable prettier/prettier */\n\n/**\n * starting of User Entity\n */\n@Entity()\nexport class User {\n\n    /**\n     * auto incremental id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates UserName column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    userName: string;\n\n    /**\n    * generates emailId column\n    */\n    @Column()\n    @IsEmail()\n    @ApiProperty()\n    emailId: string;\n\n    /**\n     * generates password column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    password: string;\n\n\n    /**\n     * generates phoneNum column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    phoneNum: number;\n\n\n    /**\n     * generates aadharNo column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    aadharNo: number;\n\n\n    /**\n     * generates gender column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    gender: string;\n\n    /**\n     * generates age column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    age: number;\n\n    /**\n     * generates infected column\n     */\n    @Column({ default: false })\n    @IsBoolean()\n    @ApiProperty()\n    infected: boolean;\n\n    /**\n     * generates address column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    address: string;\n\n    /**\n     * generates isActive column\n     */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n    static password: any;\n\n    /**\n     * generates a bcrypted password ie hashed password\n     */\n    @BeforeInsert()\n    async strongPassword() {\n        console.log(\"enterd\");\n        this.password = await bcrypt.hash(this.password, 10);\n    }\n\n    /**\n     * establishes onetoone relation between login and user\n     */\n    @OneToOne(() => Login, (login) => login.user, {\n    })\n    login: Login;\n\n    /**\n     * establishes onetomany relation between vaccinedetails and user\n     */\n\n    @OneToMany(() => VaccineDetails, (vaccineDetails) => vaccineDetails.user, {\n    })\n    vaccineDetails: VaccineDetails[];\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n            \n                Description\n            \n            \n                starting of the user controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserDetails\n                            \n                            \n                                getUserDetails\n                            \n                            \n                                logicalUserDelete\n                            \n                            \n                                updateUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserDetails\n                        \n                    \n                \n            \n            \n                \naddUserDetails(addUserDto: AddUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of adduserDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        user object , if user is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDetails\n                        \n                    \n                \n            \n            \n                \ngetUserDetails()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAllUsers')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all the users from the user table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logicalUserDelete\n                        \n                    \n                \n            \n            \n                \nlogicalUserDelete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('deleteUser/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives number as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a message if user gets deleted succesfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserDetails\n                        \n                    \n                \n            \n            \n                \nupdateUserDetails(addUserDto: AddUserDto, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/updateUserDetails/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts object of addUserDto\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts id of type number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the updated details of the user\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\n\nimport { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AddUserDto } from 'src/entity/dto/addUser.dto';\nimport { User } from 'src/entity/typeorm/user.emtity';\nimport { UserService } from './user.service';\n\n/**\n * starting of the user controller\n */\n@Controller('user')\n@ApiTags('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) { }\n\n  /**\n    * \n    * @param addUserDto accepts objects of adduserDto\n    * @returns user object , if user is added Successfully\n    */\n  @Post()\n  addUserDetails(@Body() addUserDto: AddUserDto): Promise {\n    return this.userService.addUserDetails(addUserDto);\n  }\n\n  /**\n * \n * @returns all the users from the user table\n */\n\n  @Get('/getAllUsers')\n  getUserDetails(): Promise {\n    return this.userService.getUserDetails();\n  }\n\n  /**\n * \n * @param addUserDto accepts object of addUserDto\n * @param id accepts id of type number\n * @returns the updated details of the user\n */\n  @Put('/updateUserDetails/:id')\n  updateUserDetails(\n    @Body() addUserDto: AddUserDto,\n    @Param('id') id: number,\n  ): Promise {\n    return this.userService.updateUserDetails(addUserDto, id);\n  }\n\n  /**\n   * \n   * @param id recives number as input\n   * @returns a message if user gets deleted succesfully\n   */\n  @Delete('deleteUser/:id')\n  logicalUserDelete(@Param('id') id: number): Promise {\n    return this.userService.logicalUserDelete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nLoginService\n\nLoginService\n\nUserModule -->\n\nLoginService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Login } from 'src/entity/typeorm/login.enetiy';\nimport { User } from 'src/entity/typeorm/user.emtity';\nimport { LoginService } from '../login/login.service';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Login]),\n    JwtModule.register({\n      secret: 'secret',\n      signOptions: { expiresIn: '1d' },\n    }),\n  ],\n\n  controllers: [UserController],\n  providers: [UserService, LoginService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                starting point of UserSevice\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserDetails\n                            \n                            \n                                    Async\n                                getByEmailId\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getUserDetails\n                            \n                            \n                                    Async\n                                logicalUserDelete\n                            \n                            \n                                    Async\n                                updateUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, loginRepository: Repository, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserDetails(addUserDto: AddUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of adduserDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        user object , if user is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByEmailId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByEmailId(emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all the users from the user table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logicalUserDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    logicalUserDelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives number as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a message if user gets deleted succesfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserDetails(addUserDto: AddUserDto, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts object of addUserDto\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts id of type number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the updated details of the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AddUserDto } from 'src/entity/dto/addUser.dto';\nimport { Login } from 'src/entity/typeorm/login.enetiy';\nimport { User } from 'src/entity/typeorm/user.emtity';\nimport { Repository } from 'typeorm';\nimport { LoginService } from './../login/login.service';\n\n/**\n * starting point of UserSevice\n */\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectRepository(User)\n        private userRepository: Repository,\n        @InjectRepository(Login)\n        private loginRepository: Repository,\n        //   @Inject(forwardRef(() => LoginService  private loginService: LoginService\n        @Inject(forwardRef(() => LoginService)) private readonly loginService: LoginService,\n\n    ) { }\n\n    /**\n     * \n     * @param addUserDto accepts objects of adduserDto\n     * @returns user object , if user is added Successfully\n     */\n    async addUserDetails(addUserDto: AddUserDto): Promise {\n        const user: User = new User();\n        Object.assign({}, user, addUserDto)\n        user.aadharNo = addUserDto.aadharNo;\n        user.address = addUserDto.address;\n        user.age = addUserDto.age;\n        user.emailId = addUserDto.emailId;\n        user.gender = addUserDto.gender;\n        user.infected = addUserDto.infected;\n        user.password = addUserDto.password;\n        user.phoneNum = addUserDto.phoneNum;\n        user.userName = addUserDto.userName;\n        user.isActive = true;\n        user.updatedAt = \"\";\n        user.updatedTime = \"\";\n        const date = new Date();\n        user.createdAt = date.toLocaleDateString();\n        user.createTime = date.toLocaleTimeString();\n        const login: Login = new Login();\n        login.emailId = addUserDto.emailId;\n        login.password = user.password;\n        login.isActive = true;\n        login.updatedAt = \"\";\n        login.updatedTime = \"\";\n        login.createdAt = date.toLocaleDateString();\n        login.createTime = date.toLocaleTimeString();\n        user.login = login;\n\n        await this.loginService.addLoginDetails(login);\n        return await this.userRepository.save(user);\n    }\n    // async addUserDetails(addUserDto: AddUserDto): Promise {\n    // const newEntry  = Object.assign({},AddUserDto,{})\n\n    // }\n    /**\n     * \n     * @returns all the users from the user table\n     */\n    async getUserDetails(): Promise {\n        return await this.userRepository.find();\n    }\n\n    async getById(id: number): Promise {\n        return await this.userRepository.findOne(id);\n    }\n\n    async getByEmailId(emailId: string): Promise {\n        return await this.userRepository.findOne(\n            { emailId: emailId }\n        )\n    }\n    /**\n     * \n     * @param addUserDto accepts object of addUserDto\n     * @param id accepts id of type number\n     * @returns the updated details of the user\n     */\n    async updateUserDetails(addUserDto: AddUserDto, id: number): Promise {\n        const data = this.getById(id);\n        const user: User = new User();\n\n        user.aadharNo = addUserDto.aadharNo;\n        user.address = addUserDto.address;\n        user.age = addUserDto.age;\n        user.emailId = addUserDto.emailId;\n        user.gender = addUserDto.gender;\n        user.infected = addUserDto.infected;\n        user.password = addUserDto.password;\n        user.phoneNum = addUserDto.phoneNum;\n        user.userName = addUserDto.userName;\n        user.isActive = true;\n        user.createTime = (await data).createTime;\n        user.createdAt = (await data).createdAt;\n        const date = new Date();\n        user.updatedAt = date.toLocaleDateString();\n        user.updatedTime = date.toLocaleTimeString();\n        user.id = id\n\n        const result = await this.loginService.getByEmailId(user.emailId);\n        result.password = addUserDto.password;\n        result.emailId = result.emailId;\n        result.updatedTime = date.toLocaleTimeString();\n        result.updatedAt = date.toLocaleTimeString();\n        result.user = user;\n        this.loginRepository.update(result.id, result);\n        return await this.userRepository.update(user.id, user);\n\n    }\n\n\n    /**\n     * \n     * @param id recives number as input\n     * @returns a message if user gets deleted succesfully\n     */\n    async logicalUserDelete(id: number): Promise {\n        const userResult = await this.getById(id);\n        const date = new Date();\n        userResult.isActive = false;\n        const loginResult = await this.loginService.getByEmailId(userResult.emailId);\n        userResult.updatedAt = date.toLocaleTimeString();\n        userResult.updatedTime = date.toLocaleDateString();\n        this.userRepository.update(id, userResult);\n        loginResult.user = userResult;\n        this.loginService.updateLoginDetails(loginResult.id, loginResult);\n        console.log(userResult);\n        return \"User Details Deleted Successfully\";\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VaccineDetails.html":{"url":"entities/VaccineDetails.html","title":"entity - VaccineDetails","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VaccineDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/typeorm/vaccinationData.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of VaccineDetails Entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                doseDate\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                noOfDoses\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                            \n                                user\n                            \n                            \n                                vaccineName\n                            \n                            \n                                vaccineType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:70\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:84\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:33\n                        \n                    \n\n            \n                \n                    generates the dosDate Column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:17\n                        \n                    \n\n            \n                \n                    auto increment id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:56\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfDoses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:41\n                        \n                    \n\n            \n                \n                    generates the noOfDoses Column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:49\n                        \n                    \n\n            \n                \n                    generates the status Column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:63\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:77\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.vaccineDetails, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:93\n                        \n                    \n\n            \n                \n                    establishes the many-to-one relation between the user and vaccineDetails\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:25\n                        \n                    \n\n            \n                \n                    generates the vaccineName Column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaccineType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, vaccineType => vaccineType.vaccineDetails, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccinationData.entity.ts:102\n                        \n                    \n\n            \n                \n                    establishes the many-to-one relation between the vaccineDetails and VaccineType\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { User } from \"./user.emtity\";\nimport { VaccineType } from \"./vaccineType.emtity\";\n\n/**\n * Starting of VaccineDetails Entity\n */\n@Entity()\nexport class VaccineDetails {\n    /**\n     * auto increment id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates the vaccineName Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    vaccineName: string;\n\n    /**\n     * generates the dosDate Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    doseDate: Date;\n\n    /**\n     * generates the noOfDoses Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    noOfDoses: number;\n\n    /**\n     * generates the status Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    status: string;\n\n    /**\n    * generates isActive column\n    */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n    /**\n     * establishes the many-to-one relation between the user and vaccineDetails\n     */\n    @ManyToOne(() => User, (user) => user.vaccineDetails, {\n        cascade: true\n    })\n    @JoinColumn()\n    user: User;\n\n    /**\n    * establishes the many-to-one relation between the vaccineDetails and VaccineType\n    */\n    @ManyToOne(() => VaccineType, (vaccineType) => vaccineType.vaccineDetails, {\n        cascade: true\n    })\n    @JoinColumn()\n    vaccineType: VaccineType;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaccineDetailsController.html":{"url":"controllers/VaccineDetailsController.html","title":"controller - VaccineDetailsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaccineDetailsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaccination-data/vaccination-data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                VaccineDetails\n            \n\n\n            \n                Description\n            \n            \n                starting point of VaccineDetailsController\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccineDetailsDto\n                            \n                            \n                                    Async\n                                getVaccineData\n                            \n                            \n                                    Async\n                                getVaccineDataOnDate\n                            \n                            \n                                logicalUserDelete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccineDetailsDto\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccineDetailsDto(vaccineDetails: AddVaccineDetailsDto, emailId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:emailId')\n                \n            \n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    vaccineDetails\n                                    \n                                                AddVaccineDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of vaccineDetails\n\n                                    \n                                \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts emailId of type string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the string, if vaccinedetails are added successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all the vaccinationDetails from vaccination table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineDataOnDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineDataOnDate(date: Date)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getOnDate/:date')\n                \n            \n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts date of type date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        the vaccineData based on the date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logicalUserDelete\n                        \n                    \n                \n            \n            \n                \nlogicalUserDelete(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AddVaccineDetailsDto } from 'src/entity/dto/addVaccineDetails.dto';\nimport { VaccineDetails } from 'src/entity/typeorm/vaccinationData.entity';\nimport { VaccineDetailsService } from './vaccination-data.service';\n\n/**\n * starting point of VaccineDetailsController\n */\n@Controller('VaccineDetails')\n@ApiTags('VaccineDetails')\nexport class VaccineDetailsController {\n  constructor(private readonly vaccineDetailsService: VaccineDetailsService,\n  ) { }\n\n  /**\n * \n * @param vaccineDetails accepts objects of vaccineDetails\n * @param emailId accepts emailId of type string\n * @returns the string, if vaccinedetails are added successfully\n */\n  @Post('/:emailId')\n  async addVaccineDetailsDto(\n    @Body() vaccineDetails: AddVaccineDetailsDto,\n    @Param('emailId') emailId: string,\n  ): Promise {\n    return await this.vaccineDetailsService.addVaccineDetails(\n      vaccineDetails,\n      emailId,\n    );\n  }\n\n  /**\n     * \n     * @returns all the vaccinationDetails from vaccination table\n     */\n  @Get()\n  async getVaccineData(): Promise {\n    return await this.vaccineDetailsService.getVaccineData();\n  }\n\n\n  /**\n    * \n    * @param date accepts date of type date\n    * @returns the vaccineData based on the date\n    */\n\n  @Get('/getOnDate/:date')\n  async getVaccineDataOnDate(\n    @Param('date') date: Date,\n  ): Promise {\n    return this.vaccineDetailsService.getVaccineDataOnDate(date);\n  }\n\n  @Delete('/:id')\n  logicalUserDelete(@Param('id') id: number): Promise {\n    return this.vaccineDetailsService.logicalUserDelete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaccineDetailsModule.html":{"url":"modules/VaccineDetailsModule.html","title":"module - VaccineDetailsModule","body":"\n                   \n\n\n\n\n    Modules\n    VaccineDetailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VaccineDetailsModule\n\n\n\ncluster_VaccineDetailsModule_providers\n\n\n\n\nLoginService\n\nLoginService\n\n\n\nVaccineDetailsModule\n\nVaccineDetailsModule\n\nVaccineDetailsModule -->\n\nLoginService->VaccineDetailsModule\n\n\n\n\n\nUserService\n\nUserService\n\nVaccineDetailsModule -->\n\nUserService->VaccineDetailsModule\n\n\n\n\n\nVaccineDetailsService\n\nVaccineDetailsService\n\nVaccineDetailsModule -->\n\nVaccineDetailsService->VaccineDetailsModule\n\n\n\n\n\nVaccineTypeService\n\nVaccineTypeService\n\nVaccineDetailsModule -->\n\nVaccineTypeService->VaccineDetailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaccination-data/vaccination-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            UserService\n                        \n                        \n                            VaccineDetailsService\n                        \n                        \n                            VaccineTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaccineDetailsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Login } from 'src/entity/typeorm/login.enetiy';\nimport { User } from 'src/entity/typeorm/user.emtity';\nimport { VaccineDetails } from 'src/entity/typeorm/vaccinationData.entity';\nimport { VaccineType } from 'src/entity/typeorm/vaccineType.emtity';\nimport { LoginService } from '../login/login.service';\nimport { UserService } from '../user/user.service';\nimport { VaccineTypeService } from '../vaccine-type/vaccine-type.service';\nimport { VaccineDetailsController } from './vaccination-data.controller';\nimport { VaccineDetailsService } from './vaccination-data.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([VaccineDetails, User, Login,VaccineType]),\n  JwtModule.register({\n    secret: 'secret',\n    signOptions: { expiresIn: '1d' },\n  })],\n  controllers: [VaccineDetailsController],\n  providers: [VaccineDetailsService,VaccineTypeService,UserService,LoginService]\n})\nexport class VaccineDetailsModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaccineDetailsService.html":{"url":"injectables/VaccineDetailsService.html","title":"injectable - VaccineDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaccineDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaccination-data/vaccination-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                starting point of VaccineDetailsService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccineDetails\n                            \n                            \n                                    Async\n                                getVaccineData\n                            \n                            \n                                    Async\n                                getVaccineDataOnDate\n                            \n                            \n                                    Async\n                                logicalUserDelete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineDetailsRepository: Repository, vaccineTypeService: VaccineTypeService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaccination-data/vaccination-data.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineDetailsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vaccineTypeService\n                                                  \n                                                        \n                                                                        VaccineTypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccineDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccineDetails(vaccineDetails: AddVaccineDetailsDto, emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    vaccineDetails\n                                    \n                                                AddVaccineDetailsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of vaccineDetails\n\n                                    \n                                \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts emailId of type string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the string, if vaccinedetails are added successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineData()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        all the vaccinationDetails from vaccination table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineDataOnDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineDataOnDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts date of type date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        the vaccineData based on the date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logicalUserDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    logicalUserDelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/vaccination-data/vaccination-data.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { HttpException, Injectable } from '@nestjs/common';\nimport { HttpStatus } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { DataNotFoundException, UserNotFoundException } from 'src/common/filter/customException.exception';\nimport { AddVaccineDetailsDto } from 'src/entity/dto/addVaccineDetails.dto';\nimport { VaccineDetails } from 'src/entity/typeorm/vaccinationData.entity';\nimport { VaccineTypeService } from '../vaccine-type/vaccine-type.service';\n\n\n/**\n * starting point of VaccineDetailsService\n */\n@Injectable()\nexport class VaccineDetailsService {\n    constructor(\n        @InjectRepository(VaccineDetails)\n        private vaccineDetailsRepository: Repository,\n        private vaccineTypeService: VaccineTypeService,\n        private userService: UserService,\n    ) { }\n    /**\n     * \n     * @param vaccineDetails accepts objects of vaccineDetails\n     * @param emailId accepts emailId of type string\n     * @returns the string, if vaccinedetails are added successfully\n     */\n    async addVaccineDetails(vaccineDetails: AddVaccineDetailsDto, emailId: string): Promise {\n        const result = await this.userService.getByEmailId(emailId);\n        if (result) {\n            const vaccDetailsObj = new VaccineDetails();\n            const result2 = await this.vaccineTypeService.getVaccineType(vaccineDetails.vaccineName);\n            vaccDetailsObj.user = result;\n            vaccDetailsObj.isActive = true;\n            const date = new Date();\n            vaccDetailsObj.createTime = date.toLocaleTimeString();\n            vaccDetailsObj.createdAt = date.toLocaleDateString();\n            vaccDetailsObj.updatedAt = \" \";\n            vaccDetailsObj.updatedTime = \" \";\n            vaccDetailsObj.noOfDoses = vaccineDetails.noOfDoses;\n\n            if (vaccDetailsObj.noOfDoses == 1) {\n                vaccDetailsObj.status = \"Parital\";\n                vaccDetailsObj.doseDate = vaccineDetails.doseDate;\n                vaccDetailsObj.vaccineName = vaccineDetails.vaccineName;\n            }\n            else if (vaccDetailsObj.noOfDoses == 2) {\n                vaccDetailsObj.status = \"Done With Vaccination\";\n                vaccDetailsObj.doseDate = vaccineDetails.doseDate;\n                vaccDetailsObj.vaccineName = vaccineDetails.vaccineName;\n            }\n            else {\n                throw new HttpException(\"User is not vaccinated yet\", HttpStatus.BAD_REQUEST);\n            }\n            vaccDetailsObj.vaccineType = result2;\n            console.log(\"from \", result2);\n            console.log(\"from resultt\", result);\n            await this.vaccineDetailsRepository.save(vaccDetailsObj);\n            return \"Added Successfully\";\n        }\n\n        else {\n            throw new UserNotFoundException();\n        }\n\n    }\n\n    /**\n     * \n     * @returns all the vaccinationDetails from vaccination table\n     */\n    async getVaccineData(): Promise {\n        const result = await this.vaccineDetailsRepository.find();\n        if (result) {\n            return result;\n        }\n        else {\n            throw new DataNotFoundException();\n        }\n    }\n\n    /**\n     * \n     * @param date accepts date of type date\n     * @returns the vaccineData based on the date\n     */\n\n    async getVaccineDataOnDate(date: Date): Promise {\n        const result = await this.vaccineDetailsRepository.find(\n            { doseDate: date }\n        )\n        if (result) {\n            return result;\n        }\n        else {\n            throw new DataNotFoundException();\n        }\n    }\n\n    async logicalUserDelete(id:number):Promise{\n        const userResult =await this.userService.getById(id);\n        userResult.isActive=false;\n        this.vaccineDetailsRepository.update(id,userResult);\n        return \"Deleted Successfully\"\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VaccineType.html":{"url":"entities/VaccineType.html","title":"entity - VaccineType","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VaccineType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/typeorm/vaccineType.emtity.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of VaccineType Entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                            \n                                vaccineDetails\n                            \n                            \n                                vaccineName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:44\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:58\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:16\n                        \n                    \n\n            \n                \n                    auto increment id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:31\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:38\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:51\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VaccineDetails\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, vaccineDetails => vaccineDetails.vaccineType, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:68\n                        \n                    \n\n            \n                \n                    establishes the one-to-many relation between the vaccineType and vaccineDetails\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vaccineName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/typeorm/vaccineType.emtity.ts:24\n                        \n                    \n\n            \n                \n                    generates the vaccineName Column\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { VaccineDetails } from './vaccinationData.entity';\n\n/**\n * Starting of VaccineType Entity\n */\n@Entity()\nexport class VaccineType {\n    /**\n     * auto increment id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates the vaccineName Column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    vaccineName: string;\n\n    /**\n     * generates isActive column\n     */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n\n    createTime: string;\n\n    /**\n     * establishes the one-to-many relation between the vaccineType and vaccineDetails\n     */\n    @OneToMany(\n        () => VaccineDetails,\n        (vaccineDetails) => vaccineDetails.vaccineType,\n        {},\n    )\n    vaccineDetails: VaccineDetails;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VaccineTypeController.html":{"url":"controllers/VaccineTypeController.html","title":"controller - VaccineTypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VaccineTypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaccine-type/vaccine-type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                VaccineType\n            \n\n\n            \n                Description\n            \n            \n                starting of VaccineTypeController\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccineType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccineType\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccineType(vaccineType: VaccineType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/vaccine-type/vaccine-type.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    vaccineType\n                                    \n                                                VaccineType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts object of vaccineType\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a string, if details are added successfully\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { VaccineType } from 'src/entity/typeorm/vaccineType.emtity';\nimport { VaccineTypeService } from './vaccine-type.service';\n/**\n * starting of VaccineTypeController\n */\n@Controller('VaccineType')\nexport class VaccineTypeController {\n\n        constructor(private readonly vaccineTypeService: VaccineTypeService) {}\n\n          /**\n     * \n     * @param vaccineType accepts object of vaccineType\n     * @returns a string, if details are added successfully\n     */\n\n        @Post()\n        async addVaccineType(@Body() vaccineType:VaccineType):Promise{\n          vaccineType.isActive = true;\n          const date = new Date();\n          vaccineType.createTime= date.toLocaleTimeString();\n          vaccineType.createdAt = date.toLocaleDateString();\n          vaccineType.updatedAt =  \" \";\n          vaccineType.updatedTime = \" \";\n          return await this.vaccineTypeService.addVaccineType(vaccineType)\n        }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VaccineTypeModule.html":{"url":"modules/VaccineTypeModule.html","title":"module - VaccineTypeModule","body":"\n                   \n\n\n\n\n    Modules\n    VaccineTypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VaccineTypeModule\n\n\n\ncluster_VaccineTypeModule_providers\n\n\n\ncluster_VaccineTypeModule_exports\n\n\n\n\nVaccineTypeService \n\nVaccineTypeService \n\n\n\nVaccineTypeModule\n\nVaccineTypeModule\n\nVaccineTypeService  -->\n\nVaccineTypeModule->VaccineTypeService \n\n\n\n\n\nVaccineTypeService\n\nVaccineTypeService\n\nVaccineTypeModule -->\n\nVaccineTypeService->VaccineTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/vaccine-type/vaccine-type.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VaccineTypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VaccineTypeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VaccineTypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { VaccineType } from 'src/entity/typeorm/vaccineType.emtity';\nimport { VaccineTypeController } from './vaccine-type.controller';\nimport { VaccineTypeService } from './vaccine-type.service';\n\n@Module({\n   imports:[TypeOrmModule.forFeature([VaccineType])],\n  controllers: [VaccineTypeController],\n  providers: [VaccineTypeService],\n  exports:[VaccineTypeService]\n})\nexport class VaccineTypeModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VaccineTypeService.html":{"url":"injectables/VaccineTypeService.html","title":"injectable - VaccineTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VaccineTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/vaccine-type/vaccine-type.service.ts\n        \n\n\n            \n                Description\n            \n            \n                starting of VaccineTypeService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addVaccineType\n                            \n                            \n                                    Async\n                                getVaccineType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(vaccineTypeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/vaccine-type/vaccine-type.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vaccineTypeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addVaccineType\n                        \n                    \n                \n            \n            \n                \n                    \n                    addVaccineType(vaccineType: VaccineType)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/vaccine-type/vaccine-type.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    vaccineType\n                                    \n                                                VaccineType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts object of vaccineType\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a string, if details are added successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getVaccineType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVaccineType(vaccineName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/vaccine-type/vaccine-type.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vaccineName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { VaccineType } from 'src/entity/typeorm/vaccineType.emtity';\nimport { Repository } from 'typeorm';\n\n/**\n * starting of VaccineTypeService\n */\n@Injectable()\nexport class VaccineTypeService {\n    constructor(\n        @InjectRepository(VaccineType)\n        private vaccineTypeRepository: Repository,\n\n    ) { }\n\n    /**\n     * \n     * @param vaccineType accepts object of vaccineType\n     * @returns a string, if details are added successfully\n     */\n\n    async addVaccineType(vaccineType:VaccineType):Promise{\n        await this.vaccineTypeRepository.save(vaccineType);\n        return \"Added Successfully\";\n    }\n    async getVaccineType(vaccineName:string):Promise{\n        return  await this.vaccineTypeRepository.findOne(\n            {vaccineName:vaccineName}\n        )\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/ValidationPipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/ValidationPipe.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/ValidationPipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    async transform(value: any, { metatype }: ArgumentMetadata) {\n        if (!metatype || !this.toValidate(metatype)) {\n            return value;\n        }\n        const object = plainToClass(metatype, value);\n        const errors = await validate(object);\n        if (errors.length > 0) {\n            throw new BadRequestException('Validation failed');\n        }\n        return value;\n    }\n\n    private toValidate(metatype: Function): boolean {\n        const types: Function[] = [String, Boolean, Number, Array, Object];\n        return !types.includes(metatype);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filter/customException.exception.ts\n            \n            class\n            UnauthorizedException\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/pipes/ValidationPipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/providers/jwtService.service.ts\n            \n            injectable\n            JwtTokenService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/config/swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entity/dto/addUser.dto.ts\n            \n            class\n            AddUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/entity/dto/addVaccineDetails.dto.ts\n            \n            class\n            AddVaccineDetailsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/entity/typeorm/login.enetiy.ts\n            \n            entity\n            Login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/entity/typeorm/user.emtity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/entity/typeorm/vaccinationData.entity.ts\n            \n            entity\n            VaccineDetails\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/entity/typeorm/vaccineType.emtity.ts\n            \n            entity\n            VaccineType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/modules/vaccination-data/vaccination-data.controller.ts\n            \n            controller\n            VaccineDetailsController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/vaccination-data/vaccination-data.service.ts\n            \n            injectable\n            VaccineDetailsService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/modules/vaccine-type/vaccine-type.controller.ts\n            \n            controller\n            VaccineTypeController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/modules/vaccine-type/vaccine-type.service.ts\n            \n            injectable\n            VaccineTypeService\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            slug : ^5.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/config/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts data of type INestApplication\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        an OpenAPIObject object\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaccineDetailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VaccineTypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_VaccineDetailsModule\n\n\n\ncluster_VaccineDetailsModule_providers\n\n\n\ncluster_VaccineTypeModule\n\n\n\ncluster_VaccineTypeModule_exports\n\n\n\n\nLoginModule\n\nLoginModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nVaccineDetailsModule\n\nVaccineDetailsModule\n\nAppModule -->\n\nVaccineDetailsModule->AppModule\n\n\n\n\n\nVaccineTypeModule\n\nVaccineTypeModule\n\nAppModule -->\n\nVaccineTypeModule->AppModule\n\n\n\n\n\nVaccineTypeService \n\nVaccineTypeService \n\nVaccineTypeService  -->\n\nVaccineTypeModule->VaccineTypeService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\nUserModule -->\n\nLoginService->UserModule\n\n\n\nVaccineDetailsModule -->\n\nLoginService->VaccineDetailsModule\n\n\n\n\n\nUserService\n\nUserService\n\nLoginModule -->\n\nUserService->LoginModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\nVaccineDetailsModule -->\n\nUserService->VaccineDetailsModule\n\n\n\n\n\nVaccineDetailsService\n\nVaccineDetailsService\n\nVaccineDetailsModule -->\n\nVaccineDetailsService->VaccineDetailsModule\n\n\n\n\n\nVaccineTypeService\n\nVaccineTypeService\n\nVaccineDetailsModule -->\n\nVaccineTypeService->VaccineDetailsModule\n\n\n\nVaccineTypeModule -->\n\nVaccineTypeService->VaccineTypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/config/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Tasks App Mgmnt',\n  description: ' Task Mgmnt Opertaions ',\n  version: '1.0',\n  tags: ['Task Mgmnt'],\n  \n}\n                    \n                \n\n            \n                \n                    swagger confifg properties\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
